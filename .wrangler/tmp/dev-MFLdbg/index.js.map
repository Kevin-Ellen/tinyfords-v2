{
  "version": 3,
  "sources": ["../bundle-NSBAD8/checked-fetch.js", "../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/common.ts", "../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-NSBAD8/middleware-insertion-facade.js", "wrangler-module-Text:./85008cc904f6dc5e036b86886e0d4798dbb8ea85-stylesAdmin.css", "../../../src/admin/lib/construction/documentHead.js", "../../../src/admin/lib/construction/documentEnd.js", "../../../src/admin/lib/fragments/formAdminLogin.js", "../../../src/admin/lib/utils/misc.js", "../../../src/admin/lib/construction/pageHead.js", "../../../src/admin/lib/construction/pageBreadcrumbs.js", "../../../src/admin/lib/construction/pageFooter.js", "../../../src/admin/lib/fragments/content.js", "../../../src/admin/lib/templates/home.js", "../../../src/lib/utils/misc.js", "../../../src/lib/services/github.js", "../../../src/lib/services/init.js", "../../../src/lib/utils/dataPages.js", "../../../src/lib/services/appData.js", "../../../src/lib/utils/dataCars.js", "../../../src/lib/utils/carConstruct.js", "../../../src/admin/lib/fragments/formCarAdd.js", "../../../src/admin/lib/templates/carAdd.js", "../../../src/admin/lib/fragments/formCarSearch.js", "../../../src/admin/lib/templates/carSearch.js", "../../../src/admin/lib/fragments/formCarEdit.js", "../../../src/admin/lib/templates/carEdit.js", "../../../src/admin/lib/handlers/template.js", "../../../src/admin/lib/handlers/adminLogin.js", "../../../src/admin/lib/handlers/adminLogout.js", "../../../src/admin/lib/services/github.js", "../../../src/admin/lib/handlers/carAdd.js", "../../../src/lib/utils/searchTools.js", "../../../src/admin/lib/handlers/carSearch.js", "../../../src/admin/lib/handlers/carEdit.js", "../../../src/lib/handlers/error.js", "../../../src/admin/indexAdmin.js", "../../../src/lib/api/robotsTxt.js", "../../../src/lib/api/manifest.js", "wrangler-module-Text:./5d2b6670b7a20b48d407323ea9471fa05579d093-entry-pwa.js", "../../../src/lib/utils/helpersRenders.js", "../../../src/lib/fragments/gridCars.js", "../../../src/lib/api/sw.js", "../../../src/lib/api/sitemap.js", "../../../src/lib/api/outputJson.js", "../../../src/lib/api/api.js", "../../../src/lib/handlers/static.js", "wrangler-module-Text:./0ff69fd4e0fb5e10ed95541d44101c301a44586a-styles.css", "../../../src/lib/construction/documentHead.js", "wrangler-module-Text:./864ce3fc4c03bd3553d2c1bfcebdb4b57393d0a8-init-spa.js", "wrangler-module-Text:./b69dad786934954e047bb86c036e042e343bf608-navigation-spa.js", "wrangler-module-Text:./c816affb52573c417020ac1087b27c39cc355574-appstate-spa.js", "wrangler-module-Text:./964b05abc6ae215eb1b1ec66020f594020a14e77-template-spa.js", "wrangler-module-Text:./19869fb12348258eefd8ea4d591e7d778aa5fc14-search-spa.js", "wrangler-module-Text:./2ec6b9dc0c9ba12c9738470af5e885ff339a976d-createPagination-spa.js", "wrangler-module-Text:./4f9fc078246d4d4505d9b3da1ca80bdca95e8b35-updateHeadings-spa.js", "wrangler-module-Text:./25edf53458fff2fbf41bdc0dfbcc655f7b339b13-createGrid-spa.js", "wrangler-module-Text:./658b77f0e383d176cff295a46183814cc795c7b1-createBreadcrumbs-spa.js", "wrangler-module-Text:./7aff8754c106f3ed589f3d6efb70c6d0869241cd-renderHome-spa.js", "wrangler-module-Text:./448c5cae7d1d1a972bd0585ae91ecef90a0394a0-renderCollection-spa.js", "wrangler-module-Text:./f7efc433bf9264515ad917dd458decb51a2a053b-renderContent-spa.js", "wrangler-module-Text:./ddc7c442650592a13fba18a4701302d1dc378707-renderCommentItems-spa.js", "wrangler-module-Text:./7974a5b9edb561ebcf8a2fd9f36e3839dd390c87-tools-spa.js", "wrangler-module-Text:./beeeee6822f45416f30d52faf09ef56228c3cd97-init-pwa.js", "../../../src/lib/construction/documentEnd.js", "../../../src/lib/fragments/searchBar.js", "../../../src/lib/construction/pageHead.js", "../../../src/lib/construction/pageBreadcrumbs.js", "../../../src/lib/construction/pageFooter.js", "../../../src/lib/fragments/fragmentCreators.js", "../../../src/lib/templates/home.js", "../../../src/lib/fragments/paginationControls.js", "../../../src/lib/templates/collection.js", "../../../src/lib/fragments/fragmentContentCreators.js", "../../../src/lib/templates/content.js", "../../../src/lib/handlers/template.js", "../../../src/lib/handlers/request.js", "../../../src/index.js"],
  "sourceRoot": "/Users/kevin.ellen/Documents/Development/tinyfords.com/tinyfords-cloudflare-wrangler-js/.wrangler/tmp/dev-MFLdbg",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n} from \"./common\";\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\nexport const wrap = undefined;\n", "import { __facade_registerInternal__ } from \"/usr/local/lib/node_modules/wrangler/templates/middleware/loader-sw.ts\";\nimport * as __MIDDLEWARE_0__ from \"/usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n__facade_registerInternal__([__MIDDLEWARE_0__.default])", "export default __85008cc904f6dc5e036b86886e0d4798dbb8ea85_stylesAdmin_css;", "/**\n * documentHead.js\n * This module constructs the beginning part of an HTML document, including the `<head>` section.\n */\n\nimport css from '../css/stylesAdmin.css';\n\n/**\n * Constructs and returns the initial section of an HTML document.\n * This includes meta tags, preloaded fonts, and embedded CSS for the admin panel.\n * @return {string} The initial section of an HTML document.\n */\nconst documentHead = () => {\n  const html = `<!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n        <link rel=\"preload\" href=\"/fonts/montserratalternates/v17/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xQIXFB7xG-GNxkg.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/montserratalternates/v17/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xNIPFB7xG-GNxkg.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/quicksand/v30/6xKtdSZaM9iE8KbpRA_hK1QNYuDyPw.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <style>\n          ${css}\n        </style>\n        <title>Tiny Fords - Admin panel</title>\n        <meta name=\"theme-color\" content=\"#005490\">\n      </head>\n      <body>`;\n  \n  return html;\n}\nexport default documentHead;", "/**\n * documentEnd.js\n * This module returns the closing tags for an HTML document.\n */\n\n/**\n * Returns the closing tags for an HTML document.\n * @return {string} The closing tags for an HTML document.\n */\nconst documentEnd = () => {\n  const html = `\n  </body>\n  </html>`;\n  \n  return html;\n}\nexport default documentEnd;", "/**\n * formAdminLogin.js\n * \n * This module provides a fragment that constructs the HTML for the admin login form.\n * It's a simple, yet essential, part of the authentication process for the admin panel.\n * Users are expected to input their username and password to gain access to the admin functionalities.\n */\n\n/**\n * Constructs and returns the HTML for the admin login form.\n * \n * The form consists of two primary input fields: username and password. Both fields are mandatory.\n * The form is wrapped within a section with the class `fragmentContent` and `adminCenter` \n * for styling and layout purposes.\n *\n * @return {string} - The constructed HTML string representing the admin login form.\n */\nconst fragmentFormAdminLogin = () => {\n  const html = `\n    <section class=\"fragmentContent adminCenter\">\n      <h1>Login</h1>\n      <div class=\"formContainer\">\n        <form action=\"/admin\" method=\"post\" class=\"adminForm\">\n          <div class=\"inputGroup\">\n            <label for=\"username\">Username:</label>\n            <input type=\"text\" id=\"username\" name=\"username\" required>\n          </div>\n\n          <div class=\"inputGroup\">\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" name=\"password\" required>\n          </div>\n\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    </section>\n  `;\n\n  return html;\n}\nexport default fragmentFormAdminLogin;", "/**\n * misc.js\n * \n * This module contains utility functions for the admin section.\n * These are quick tools and helper methods that serve various purposes like \n * checking login status, ensuring unique entries, or generating dropdown options.\n */\n\n// External Dependencies\nimport fragmentFormAdminLogin from \"../fragments/formAdminLogin\";\n\n/**\n * Checks if the user is logged in by examining the Cookie header.\n *\n * @param {Request} request - The incoming request object.\n * @return {boolean} True if the user is logged in, otherwise false.\n */\nexport const isLoggedIn = (request) => {\n  const cookieString = request.headers.get('Cookie');\n  return cookieString && cookieString.includes('admin-authenticated=true');\n}\n\n/**\n * Provides a quick login form if the user isn't authenticated.\n * If the user is logged in, it returns false.\n *\n * @param {Request} request - The incoming request object.\n * @return {string|boolean} HTML string of the login form or false if already logged in.\n */\nexport const quickLogin = (request) => {\n  if(isLoggedIn(request)){ return false; }\n\n  return [\n    '<main>',\n      fragmentFormAdminLogin(),\n    '</main>',\n  ].join('');\n}\n\n/**\n * Fetches the ID of the last car in the data and increments it by one.\n *\n * @param {Array} data - The array containing car data.\n * @return {number} ID for the next car to be added.\n */\nexport const getLastCarId = (data) => {\n  return Math.max(...data.map(car => car.id))+1;\n}\n\n/**\n * Checks for duplicates in the provided data array based on the keys and values specified.\n *\n * @param {Array} dataArray - The array containing data.\n * @param {Array} keys - The keys to check for duplicates.\n * @param {Object} values - The values to compare against.\n * @return {Object} An object indicating success or failure and an associated message.\n */\nexport const duplicateChecker = (dataArray, keys, values) => {\n  for (let key of keys) {\n    if (key === 'code' && values[key] === null) {\n      continue;\n    }\n    if (dataArray.some(item => item[key] === values[key] && item.id !== values.id)) {\n      return {\n        success: false,\n        message: `Duplicate found for <em>${key}</em> with value <em>${values[key]}</em>.`\n      };\n    }\n  }\n  return {\n    success: true,\n    message: 'No duplicates found.'\n  };\n}\n\n/**\n * Generates options for a dropdown/select based on provided items.\n *\n * @param {Array} items - The array containing data for dropdown options.\n * @param {string|number} selectedValue - The value that should be marked as selected.\n * @param {string} [valueProp='id'] - The property name to use for option values.\n * @param {string} [nameProp='name'] - The property name to use for option names.\n * @return {string} HTML string of options for a dropdown.\n */\nexport const generateOptions = (items, selectedValue, valueProp = 'id', nameProp = 'name') => {\n  return items.map(item => `\n    <option value=\"${item[valueProp]}\" ${item[valueProp] === selectedValue ? 'selected' : ''}>\n      ${item[nameProp]}\n    </option>\n  `).join('');\n}", "/**\n * pageHead.js\n * \n * This module constructs the header section of the admin pages, which includes the navigation menu \n * and other associated elements. It leverages utility functions and configurable options to generate \n * a dynamic and adaptive page header.\n * \n * Dependencies:\n *  - isLoggedIn function from the misc utilities.\n */\n\n// Import utility function to check if a user is logged in.\nimport { isLoggedIn } from '../utils/misc';\n\n/**\n * Constructs and returns the header and navigation menu for the admin pages. \n * It assembles the main navigation menu based on the user's authentication status \n * and integrates it into the header section of the page.\n *\n * @param {Object} request - The incoming request object containing details about the request.\n * @param {Object} options - Configuration options which might include authentication status.\n * @return {string} - The constructed HTML string representing the header and navigation menu section of the page.\n */\nconst pageHead = (request, options) => {\n  // Generate the appropriate navigation links based on the user's authentication status.\n  const links = generateLinks(request, options);\n\n  // Construct the HTML string for the header and navigation menu.\n  const html = `\n    <header class=\"siteHeader\">\n      <div class=\"siteHeaderContainer\">\n        <label class=\"siteNavLabel\" for=\"siteNavBox\">\n          <svg viewBox=\"0 0 100 80\" width=\"25\" height=\"25\">\n            <rect width=\"100\" height=\"20\" rx=\"10\"></rect>\n            <rect y=\"30\" width=\"100\" height=\"20\" rx=\"10\"></rect>\n            <rect y=\"60\" width=\"100\" height=\"20\" rx=\"10\"></rect>\n          </svg>\n          <span class=\"a11y\">Open main menu</span>\n        </label>\n\n        <p class=\"siteNavName\"><a href=\"/\">Tiny Fords</a></p>\n\n        <input type=\"checkbox\" class=\"siteNavBox\" id=\"siteNavBox\">\n        <nav class=\"siteNavMenu\" aria-label=\"Main menu\">\n          <ul class=\"mainMenu\">\n            ${links}\n          </ul>\n        </nav>\n      </div>\n    </header>`;\n  \n  return html;\n};\n\nexport default pageHead;\n\n/**\n * A helper function to generate the navigation links based on the user's authentication status.\n * It creates a list of navigation links for authenticated users and a back link for unauthenticated users.\n *\n * @param {Object} request - The incoming request object.\n * @param {Object} options - A set of options that might include the user's authentication status.\n * @return {string} - The constructed HTML string representing the navigation links.\n */\nconst generateLinks = (request, options = {}) => {\n  // Check if the user is authenticated.\n  const loggedIn = isLoggedIn(request) || options.isAuthenticated;\n\n  // Return the appropriate set of navigation links based on the authentication status.\n  if (!loggedIn) {\n    return `<li><a href=\"/\">Back to public home</a></li>`;\n  } else {\n    return [\n      { name: 'Admin home', slug: '/admin' },\n      { name: 'Add car', slug: '/admin/add-car' },\n      { name: 'Search car', slug: '/admin/search-car' },\n      { name: 'Log out', slug: '/admin/logout' }\n    ].map(page => `<li><a href=\"${page.slug}\">${page.name}</a></li>`)\n     .join('');\n  }\n};", "/**\n * pageBreadcrumbs.js\n * This module constructs a simple breadcrumb for the admin pages.\n */\n\n/**\n * Constructs and returns the breadcrumb navigation for the admin pages.\n * @return {string} The breadcrumb navigation HTML string.\n */\nconst pageBreadcrumbs = () => {\n  const html = `\n  <nav class=\"breadcrumbsContainer\" aria-label=\"breadcrumb\">\n    <ul class=\"breadcrumbs\">\n      <li><a href=\"/\">Public home</a></li>\n      <li aria-hidden=\"true\">/</li>\n      <li><a href=\"/admin\">Admin home</a></li>\n    </ul>\n  </nav>`;\n\n  return html;\n}\nexport default pageBreadcrumbs;", "/**\n * pageFooter.js\n * This module constructs the footer for the admin pages.\n */\n\n/**\n * Constructs and returns the footer for the admin pages.\n * @return {string} The footer HTML string.\n */\nconst pageFooter = () => {\n\n  const html = `\n    <footer class=\"siteFooter\">\n      <h2>Thanks for visiting Tiny Fords</h2>\n      <p>Here at Tiny Fords, we're passionate about Ford die-cast cars, and we're thrilled to share our collection with you. This non-commercial site is a labor of love, created by Kevin Ellen to keep track of his collection and avoid buying duplicates. We're proud to say it was made in 2023, using a Cloudflare Worker on a free account. We hope you've enjoyed exploring our collection and we look forward to your next visit! Don't forget to check out the contact page if you have any question or feedback. Thank you for choosing Tiny Fords.</p>\n    </footer>`;\n    \n  return html;\n}\nexport default pageFooter;", "/**\n * content.js\n * \n * This module provides a function to wrap content inside a specific HTML structure.\n * The content is placed within a <section> element with the class \"fragmentContent\".\n */\n\n/**\n * Wrap provided content within a <section> element.\n * \n * @param {string} content - The content to be wrapped.\n * @returns {string} - The wrapped content as an HTML string.\n */\nconst fragmentContent = (content) => {\n  const html = `<section class=\"fragmentContent\">\n    ${content}\n  </section>`;\n  return html;\n}\nexport default fragmentContent;\n", "/**\n * home.js\n * \n * This module provides the template for the admin home page.\n * It displays a list of admin functions such as \"Add car\" and \"Edit car\".\n * If the user is authenticated, it shows the admin functions; otherwise, \n * it prompts the user to log in.\n */\n\n// External Dependencies\nimport fragmentContent from '../fragments/content';\nimport { quickLogin } from '../utils/misc';\n\n/**\n * Constructs the HTML template for the admin home page.\n *\n * @param {Request} request - The incoming request object.\n * @param {Object} options - Contains information about whether the user is authenticated.\n * @return {string} The HTML template of the admin home page.\n */\nconst templateAdminHome = (request, options) => {\n  \n  // The main content of the admin home page\n  const content = [\n    `<h1>Admin panel</h1>`,\n    `<p>Admin functions to add and edit cars.</p>`,\n    `<ul>`,\n      `<li><a href=\"/admin/add-car\">Add car</a></li>`,\n      `<li><a href=\"/admin/edit-car\">Edit car</a></li>`,\n    `</ul>`,\n  ].join('');\n\n  // Wrap the main content in the standard content fragment\n  const sections = [\n    fragmentContent(content)\n  ].join('');\n\n  // If the user is authenticated, return the sections. Otherwise, return the login prompt.\n  return options.isAuthenticated ? sections : quickLogin(request) || sections;\n}\nexport default templateAdminHome;", "/**\n * misc.js\n * \n * This module provides utility functions for miscellaneous tasks \n * that may not fit into other, more specific utility modules.\n */\n\n/**\n * Decodes a base64 encoded string, taking into account special characters.\n *\n * @param {string} str - The base64 encoded string to decode.\n * @returns {string} - The decoded string.\n */\nexport const base64Decode = (str) => {\n  return decodeURIComponent(\n    atob(str)\n      .split('')\n      .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n      .join('')\n  );\n}\n/**\n * Retrieves the nested value from an object based on a string path.\n * \n * @param {Object} obj - The object to retrieve the value from.\n * @param {string} path - The string path, e.g., 'addedDetails.date'.\n * @returns {*} - The value at the specified path.\n */\nconst getValueByPath = (obj, path) => {\n  return path.split('.').reduce((acc, part) => acc && acc[part], obj);\n}\n\n/**\n * Sort an array of objects by multiple fields.\n * \n * @param {Array} data - The array of objects to be sorted.\n * @param {Array} fields - An array of fields to sort by in priority order.\n * @param {Object} directions - An object specifying the direction for each field ('asc' or 'desc').\n * @returns {Array} - The sorted array.\n */\nexport const multiSort = (data, fields, directions) => {\n  return data.sort((a, b) => {\n    for (const field of fields) {\n      const valueA = getValueByPath(a, field);\n      const valueB = getValueByPath(b, field);\n\n      let comparison;\n      // Check if we're dealing with dates\n      if (valueA && valueB && Date.parse(valueA) && Date.parse(valueB)) {\n        comparison = new Date(valueB) - new Date(valueA);\n      } else {\n        comparison = valueA < valueB ? -1 : valueA > valueB ? 1 : 0;\n      }\n      if (directions[field] === 'asc') {\n        comparison *= -1;\n      }\n      if (comparison !== 0) return comparison;\n    }\n    return 0;\n  });\n};\n\nexport const deepMerge = (obj1, obj2) => {\n  let merged = Array.isArray(obj1) ? [] : {};\n  for (let key in obj1) {\n    if (obj1.hasOwnProperty(key)) {\n      if (obj2.hasOwnProperty(key)) {\n        if (typeof obj1[key] === 'object' && obj1[key] !== null && typeof obj2[key] === 'object' && obj2[key] !== null) {\n          merged[key] = deepMerge(obj1[key], obj2[key]);\n        } else {\n          merged[key] = obj2[key];\n        }\n      } else {\n        merged[key] = obj1[key];\n      }\n    }\n  }\n  // If it's an array, fill in the rest of the items from obj2\n  if (Array.isArray(obj1) && Array.isArray(obj2)) {\n    for (let i = obj1.length; i < obj2.length; i++) {\n      merged[i] = obj2[i];\n    }\n  }\n  return merged;\n}", "/**\n * utilGitHub.js\n * \n * Utility functions to interact with the GitHub API.\n * These functions provide the capability to fetch JSON data and images from a GitHub repository.\n */\n\n// Importing utility for decoding base64 strings.\nimport {base64Decode} from '../utils/misc';\n\n// Constants related to the GitHub repository and API access.\nconst apiKey = GITHUB_API_KEY;\nconst REPO_OWNER = 'Kevin-Ellen';\nconst REPO_NAME = 'tinyfords-v2';\nconst BASE_URL = `https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/contents/`;\nconst FILE_PATH = {\n  allPages: 'src/data/pages.json',\n  allCars:  'src/data/cars.json',\n};\n\n/**\n * Fetch data from a given path in the GitHub repository.\n * \n * @param {string} path - The path to the file in the GitHub repository.\n * @returns {Object} - Parsed JSON data from the fetched file.\n * @throws Will throw an error if the GitHub API returns a non-okay response.\n */\nconst fetchFromGitHub = async (path) => {\n  const url = BASE_URL + path;\n  const response = await fetch(url, {\n    headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'User-Agent': 'tinyfords-v2-app',\n        'Accept': 'application/json'\n    }\n  });\n\n  if (!response.ok) {\n    console.log(\"Headers:\");\n    for (let [key, value] of response.headers.entries()) {\n        console.log(`${key}: ${value}`);\n    }\n    response.text().then(text => {\n      console.log(\"Response body:\", text);\n  });\n    throw new Error(`GitHub API returned ${response.status}: ${response.statusText}`);\n  }\n\n  const data = await response.json();\n  const decoded = base64Decode(data.content);\n  \n  return JSON.parse(decoded);\n}\n\n/**\n * Fetch all page data from the GitHub repository.\n * \n * @returns {Object} - Parsed JSON data of all pages.\n */\nexport const servicesGithubDataPageAll = async () => {\n  return fetchFromGitHub(FILE_PATH.allPages);\n}\n\n/**\n * Fetch all car data from the GitHub repository.\n * \n * @returns {Object} - Parsed JSON data of all cars.\n */\nexport const servicesGithubDataCarsAll = async () => {\n  return fetchFromGitHub(FILE_PATH.allCars);\n}\n\n/**\n * Fetch an image from a given path in the GitHub repository.\n * \n * @param {string} path - The path to the image in the GitHub repository.\n * @returns {Blob} - The fetched image as a blob.\n * @throws Will throw an error if the GitHub API returns a non-okay response.\n */\nexport const servicesGithubImageGetter = async (path) => {\n  const response = await fetch(BASE_URL + path, {\n    headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'User-Agent': 'tinyfords-v2-app',\n        'Accept': 'application/vnd.github.3.raw'\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error('Image not found on Github');\n  }\n\n  const eTag = response.headers.get('etag');\n  const blob = await response.blob();\n\n  return {\n    headers: { etag: eTag },\n    data: blob\n  };\n}", "/**\n * init.js\n *\n*/\n\nexport const ITEMS_PER_PAGE = {\n  homepage: 14,\n  collection: 21\n}", "import { appData } from '../services/appData';\n\n/**\n * Find the page data for the current page based on its slug.\n * \n * @param {string} slug - The slug of the current page.\n * @param {Array} dataPageAll - The list of all page data objects.\n * @returns {Object|null} - The data for the current page, or null if not found.\n */\nexport const getPageBySlug = (slug, data = appData.pages.all) => {\n  return data.find(page => page.slug === slug) || false;\n}", "import { servicesGithubDataCarsAll, servicesGithubDataPageAll } from '../services/github';\nimport { ITEMS_PER_PAGE } from './init';\n\n\nimport { getPageBySlug } from '../utils/dataPages';\nimport { getCarsByCategoryId, searchCars, utilDataCarsLatest } from '../utils/dataCars';\n\nexport const appData = {\n  pages: {\n    all: [],\n    current: {},\n  },\n  cars: {\n    all: [],\n    current: [],\n    overview: {\n      ot: 0,\n      hw: 0,\n      mb: 0,\n      all: 0,\n    }\n  },\n  search: {\n    searchTerm: null,\n    success: false,\n    action: null,\n  },\n  options: {\n    noindex: null,\n  },\n  breadcrumbs: [],\n  pagination:{\n    page: null,\n    start: null,\n    end: null,\n    total: null,\n    slug: null,\n    previous:{\n      has: null,\n      page: null,\n    },\n    next:{\n      has: null,\n      page: null,\n    }\n  }\n}\n\nexport const apiAppData = async () => {\n  try{\n    appData.cars.all = await servicesGithubDataCarsAll();\n    appData.pages.all = await servicesGithubDataPageAll();\n  }catch(error){\n    console.error('Error initializing appData: ', error);\n  }\n}\n\nexport const initAppData = async (url) => {\n  try{\n    appData.pages.all = await servicesGithubDataPageAll();\n    const allCars = await servicesGithubDataCarsAll();\n\n    appData.cars.all = utilDataCarsLatest(allCars);\n\n    setCurrentPage(url);\n    setBreadcrumbs();\n    setNoindex();\n    setCurrentCanonical();\n    setCarsOverview();\n\n    if(appData.pages.current.url.searchParams.get('q')){\n      appData.search.searchTerm = appData.pages.current.url.searchParams.get('q');\n      appData.search.action = 'search';\n      appData.search.success = true;\n    }\n\n    if(appData.pages.current.hasCars){\n      setCurrentCars(appData.pages.current.id);\n      if(appData.search.action==='search' && appData.search.success){\n        appData.cars.current = searchCars(appData.search.searchTerm);\n      }\n    }\n    if(appData.pages.current.template==='collection'){\n      setPagination(appData.pages.current.url.searchParams.get('page'));\n    }\n\n    if(appData.pages.current.template==='home'){\n      appData.cars.current = utilDataCarsLatest(allCars, ITEMS_PER_PAGE.homepage);\n    }\n\n\n  }catch(error){\n    console.error('Error initializing appData: ', error);\n  }\n}\n\nexport const setPageForApi = (url) => {\n  setCurrentCars(appData.pages.current.id);\n  setPagination(1);\n}\n\nconst setCurrentPage = (url) => {\n  try{\n    appData.pages.current = getPageBySlug(url.pathname);\n    appData.pages.current.url = url;\n    return true;\n  }catch(error){\n    console.log('[Error] request.js: setCurrentPage', error);\n    return false;\n  }\n}\n\nconst setCurrentCanonical = () => {\n  const { pages: { current } } = appData;\n  appData.pages.current.canonical = false;\n  if(current.status === 200 && current.template !== 'offline') {\n    appData.pages.current.canonical = `${current.url.protocol}//${current.url.host}${current.slug}`;\n\n    if(current.template === 'collection' && current.url.searchParams.get('page') && current.url.searchParams.get('page') != 1) {\n      appData.pages.current.canonical += `?page=${current.url.searchParams.get('page')}`;\n    }\n  }\n}\n\nconst setCurrentCars = (id) => {\n  try{\n    appData.cars.current = (id==='home' || id=== 'all') ?  appData.cars.all : getCarsByCategoryId(id);\n    return true;\n  }catch(error){\n    console.log('[Error] request.js: setCurrentCars', error);\n    return false;\n  }\n}\n\nconst setPagination = (pageNumber = 1) => {\n  const carsCount = appData.cars.current.length;\n  pageNumber = parseInt(pageNumber);\n\n  appData.pagination.page = pageNumber;\n  appData.pagination.start = (pageNumber - 1) * ITEMS_PER_PAGE.collection;\n  appData.pagination.end = appData.pagination.start + ITEMS_PER_PAGE.collection;\n  appData.pagination.total = Math.ceil(carsCount / ITEMS_PER_PAGE.collection);\n  appData.pagination.slug = appData.pages.current.url.pathname;\n  appData.pagination.previous.has = pageNumber > 1;\n  appData.pagination.previous.page = pageNumber > 1 ? pageNumber - 1 : null;\n  appData.pagination.next.has = appData.pagination.end < carsCount;\n  appData.pagination.next.page = appData.pagination.end < carsCount ? pageNumber + 1 : null;\n}\n\n/**\n * Generate the breadcrumb trail for the current page.\n * \n * @param {Object} data - The data containing current page and all pages.\n * \n */\nconst setBreadcrumbs = (data = appData.pages.all) => {\n  appData.breadcrumbs = appData.pages.current.breadcrumbList.map((breadcrumbName, index) => {\n    const breadcrumbPage = data.find(page => page.name === breadcrumbName);\n    if (breadcrumbPage) {\n      return {\n        name: breadcrumbName,\n        slug: breadcrumbPage.slug,\n        position: index + 1\n      };\n    } else {\n      return null;\n    }\n  }).filter(item => item);\n};\n\n\nconst setNoindex = (data = appData.pages.current) => {\n  // Default to false at the beginning of the function\n  appData.options.noindex = false; \n  \n  // Check if noindex is true in data and set appData.options.noindex accordingly\n  if (data.visibility.robots.noindex) {\n      appData.options.noindex = true; \n      return true;\n  }\n  \n  // Iterate over searchParams and set appData.options.noindex to true \n  // under certain conditions\n  for (const [key, value] of data.url.searchParams.entries()) {\n      if (key !== 'page' || isNaN(value) || parseInt(value, 10) != value) {\n          appData.options.noindex = true; \n          return true;\n      }\n  }\n  \n  // If none of the above conditions are met, return false\n  return false;\n}\n\nconst setCarsOverview = () => {\n  appData.cars.overview.hw = 0;\n  appData.cars.overview.mb = 0;\n  appData.cars.overview.ot = 0;\n  appData.cars.all.forEach((car) => {\n    appData.cars.overview[car.categoryDetails.id] ++;\n  });\n  appData.cars.overview.all = appData.cars.overview.hw + appData.cars.overview.mb + appData.cars.overview.ot;\n}", "/**\n * dataCars.js\n * \n * This module offers utility functions to handle operations\n * related to car data like sorting, retrieving unique categories,\n * and fetching specific car details.\n */\n\n// Import necessary utilities\nimport { multiSort } from './misc';\nimport { appData } from '../services/appData';\n\n/**\n * Retrieves the latest cars based on the added date and ID.\n * \n * @param {Array} data - The list of car data objects.\n * @param {number} number - The number of latest cars to retrieve.\n * @returns {Array} - The sorted list of latest cars.\n */\nexport const utilDataCarsLatest = (data, number) => {\n  const sortedCars = multiSort(data, ['addedDetails.date', 'id'], { 'addedDetails.date': 'desc', id: 'desc' });\n  return sortedCars.slice(0, number);\n}\n\n/**\n * Extracts unique car categories from the provided car data.\n * \n * @param {Array} data - The list of car data objects.\n * @returns {Array} - The list of unique car categories.\n */\nexport const getUniqueCarCategories = (data) => {\n  const uniqueCategoriesMap = data.reduce((acc, car) => {\n    const { id, name, folder } = car.categoryDetails;\n    \n    if (!acc[id]) {\n      acc[id] = { id, name, folder };\n    }\n    \n    return acc;\n  }, {});\n\n  return Object.values(uniqueCategoriesMap);\n}\n\n/**\n * Extracts unique car case types from the provided car data.\n * \n * @param {Array} data - The list of car data objects.\n * @returns {Array} - The list of unique car case types.\n */\nexport const getUniqueCarCaseTypes = (data) => {\n  const uniqueCarCaseTypeMap = data.reduce((acc, car) => {\n    const { id, name } = car.caseDetails;\n    \n    if (!acc[id]) {\n      acc[id] = { id, name };\n    }\n    \n    return acc;\n  }, {});\n\n  return Object.values(uniqueCarCaseTypeMap);\n}\n\n/**\n * Retrieves the case details of a car by its case ID.\n * \n * @param {Array} dataCarsAll - The list of all cars data.\n * @param {string} caseId - The ID of the car case to retrieve.\n * @returns {Object|false} - The car case details or false if not found.\n */\nexport const getCaseById = (dataCarsAll, caseId) => {\n  if(caseId === undefined || caseId === false){return false;}\n  \n  const foundItem = dataCarsAll.find(item => item.caseDetails.id === caseId);\n  return foundItem ? foundItem.caseDetails : false;\n}\n\n/**\n * Retrieves the category details of a car by its category ID.\n * \n * @param {Array} dataCarsAll - The list of all cars data.\n * @param {string} categoryId - The ID of the car category to retrieve.\n * @returns {Object|false} - The car category details or false if not found.\n */\nexport const getCategoryById = (dataCarsAll, categoryId) => {\n  if(categoryId === undefined){return false;}\n  return dataCarsAll.find(item => item.categoryDetails.id === categoryId).categoryDetails;\n}\n\n/**\n * Fetches a car object from the list by its ID.\n * \n * @param {Array} cars - The list of all cars data.\n * @param {number|string} id - The ID of the car to retrieve.\n * @returns {Object} - The car object.\n */\nexport const getCarById = (id, cars = appData.cars.all) => {\n  return cars.find(car => car.id === parseInt(id, 10));\n}\n\n/**\n * Fetches all car objects from the list by their category ID.\n * \n * @param {Array} cars - The list of all cars data.\n * @param {number|string} id - The ID of the category.\n * @returns {Array} - The list of cars that belong to the given category.\n */\nexport const getCarsByCategoryId = (id, cars = appData.cars.all) => {\n  return cars.filter(car => car.categoryDetails.id === id);\n}\n\n/**\n * Filters the dataset of cars based on a search term.\n * \n * @param {Array} data - The dataset of cars.\n * @param {string} term - The search term.\n * @returns {Array} - The filtered list of cars.\n */\nexport const searchCars = (term, data = appData.cars.current) => {\n  \n  if(!term) return data;\n  \n  // Convert the search term to lowercase for case-insensitive search\n  term = term.toLowerCase();\n\n  \n\n  // Return only those cars that have the search term in their name, brand, or code\n  return data.filter(car => {\n    return (\n      car.name && car.name.toLowerCase().includes(term) ||           // Check if name exists and includes the term\n      car.brand && car.brand.toLowerCase().includes(term) ||         // Check if brand exists and includes the term\n      car.code && car.code.toLowerCase().includes(term) ||              // Check if code exists and includes the term\n      car.make && car.make.toLowerCase().includes(term)              // Check if code exists and includes the term\n    );\n  });\n};", "/**\n * carConstruct.js\n * \n * This module provides utility functions to construct car objects,\n * process form data, and manage specific car-related tasks.\n */\n\n// Importing required modules and utilities.\nimport { getCaseById, getCategoryById } from \"./dataCars\";\n\n/**\n * Construct a car object based on the given data and default templates.\n * \n * @param {Array} dataCarsAll - The list of all cars data.\n * @param {Object} data - The car data object to be processed.\n * @returns {Object} - The constructed car object.\n */\nconst utilCarConstruct = (dataCarsAll = [], data = {}) => {\n  const processedData = processFormData(data);\n\n  const newCar = {\n    ...templateCar,\n    ...processedData,\n    hasPhoto: processBooleanField(processedData.hasPhoto),\n    caseDetails: {\n      ...templateCar.caseDetails,\n      ...getCaseById(dataCarsAll, processedData.caseType),\n      status: processBooleanField(processedData.hasCase)\n    },\n    categoryDetails: getCategoryById(dataCarsAll, processedData.category) || templateCar.categoryDetails\n  };\n\n  switch (newCar.categoryDetails.id) {\n    case 'hw':\n    case 'mb':\n      newCar.brand = newCar.categoryDetails.name;\n      break;\n    default:\n      break;\n  }\n\n  delete newCar.hasCase;\n  delete newCar.caseType;\n  delete newCar.category;\n  delete newCar.action;\n\n  return newCar;\n}\nexport default utilCarConstruct;\n\n// Template for default car structure.\nconst templateCar = {\n  id: null,\n  name: '',\n  make: '',\n  brand: '',\n  categoryDetails: {\n    id: '',\n    name: '',\n    folder: '',\n  },\n  code: null,\n  base: null,\n  caseDetails: {\n    id: '',\n    name: '',\n    status: null,\n  },\n  quantity: 0,\n  addedDetails: {\n    date: null,\n    by: ''\n  },\n  hasPhoto: false,\n};\n\n/**\n * Process form data to match the required format.\n * \n * @param {Object} formData - The form data to be processed.\n * @returns {Object} - The processed form data.\n */\nconst processFormData = (formData) => {\n  const processedData = { ...formData }; // Create a shallow copy\n\n  const nullKeys = ['code', 'hasCase', 'base'];\n  nullKeys.forEach(key => {\n      if (processedData.hasOwnProperty(key) && processedData[key] === \"null\") {\n          processedData[key] = null;\n      }\n  });\n\n  processedData.id = parseInt(processedData.id, 10);\n  processedData.quantity = parseInt(processedData.quantity, 10);\n\n  processedData.hasPhoto = processHasPhoto(processedData.hasPhoto);\n\n  return processedData;\n}\n\n/**\n * Determine if the car has a photo based on the provided value.\n * \n * @param {any} value - The value indicating the presence of a photo.\n * @returns {boolean} - True if the car has a photo, false otherwise.\n */\nconst processHasPhoto = (value) => {\n  if (value === 'on') return true;        // formData for checked checkbox\n  if (value === true) return true;       // previously submitted data\n  if (value === false) return false;     // previously submitted data\n  return false;                          // default for all other cases\n}\n\n/**\n * Convert the given value to its appropriate boolean representation.\n * \n * @param {any} value - The value to be processed.\n * @returns {boolean|null} - The processed boolean value or null.\n */\nconst processBooleanField = (value) => {\n  if (['on', 'true'].includes(value)) return true;\n  if (value === 'false') return false;\n  if (value === 'null') return null;\n  return value;\n}", "/**\n * formCarAdd.js\n * \n * This module provides a fragment to construct the HTML for the form to add new vehicles to the JSON.\n * The form contains various input fields, like code, base, name, make, category, etc. \n * It also utilizes helper functions to generate the dropdown options and to validate data.\n */\n\n// External Dependencies\nimport { servicesGithubDataCarsAll } from '../../../lib/services/github';\nimport utilCarConstruct from '../../../lib/utils/carConstruct';\nimport { getUniqueCarCategories, getUniqueCarCaseTypes } from '../../../lib/utils/dataCars';\nimport { getLastCarId, duplicateChecker } from '../utils/misc';\n\n/**\n * Constructs and returns the HTML for the add car form.\n * \n * The function checks if the provided car data already exists in the system.\n * If so, it pre-fills the form with the data for easier editing.\n * The form also contains various validations, like checking for duplicate codes.\n *\n * @param {Object} options - The data object that might contain feedback and car data.\n * @return {string} - The constructed HTML string for the add car form.\n */\nconst fragmentFormCarAdd = async (options = {}) => {\n  const dataCarsAll = await servicesGithubDataCarsAll();\n  \n  const dataCar = (!options.feedback || options.feedback.success) \n    ? utilCarConstruct({}, dataCarsAll) \n    : options.data;\n\n  const categories = generateOptions(getUniqueCarCategories(dataCarsAll), dataCar.categoryDetails.id);\n  const cases = generateOptions(getUniqueCarCaseTypes(dataCarsAll), dataCar.caseDetails.id);\n\n  const html = `\n    <!-- Add Car Form Section -->\n    <section class=\"fragmentContent adminCenter\">\n      <h2>Add car form</h2>\n      <div class=\"formContainer\">\n        <!-- Actual Form Begins -->\n        <form action=\"/admin/add-car\" method=\"post\" class=\"adminForm\">\n          <input type=\"hidden\" name=\"id\" id=\"id\" value=\"${getLastCarId(dataCarsAll)}\">\n\n          <div class=\"inputGroup\">\n            <label for=\"code\">Code:</label>\n            <input type=\"text\" \n              id=\"code\" \n              name=\"code\" \n              value=\"${dataCar.code && duplicateChecker(dataCarsAll, 'code', dataCar.code).success ? dataCar.code : ''}\" \n              required>\n            ${dataCar.code ? !duplicateChecker(dataCarsAll, 'code', dataCar.code).success ? `<p>Previously provided code already exists</p>` : '' : ''}\n          </div>\n\n          <div class=\"inputGroup\">\n            <label for=\"base\">Base:</label>\n            <input type=\"text\" id=\"base\" name=\"base\" value=\"${dataCar.base || ''}\" required>\n          </div>\n\n          <div class=\"inputGroup\">\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" value=\"${dataCar.name || ''}\" required>\n          </div>\n\n          <div class=\"inputGroup\">\n            <label for=\"make\">Make:</label>\n            <input type=\"text\" id=\"make\" name=\"make\" value=\"${dataCar.make || ''}\" required>\n          </div>\n\n          <div class=\"inputGroup\">\n            <label for=\"category\">Category:</label>\n            <select id=\"category\" name=\"category\" required>\n              <option value=\"\" selected disabled>Select a category</option>\n              ${categories}\n            </select>\n          </div>\n\n          <div class=\"inputGroup\">\n            <label for=\"brand\">Brand:</label>\n            <input type=\"text\" id=\"brand\" name=\"brand\" value=\"${dataCar.brand || ''}\">\n          </div>\n\n          <div class=\"inputGroup\">\n            <label for=\"hasPhoto\">Photo is online:</label>\n            <input type=\"checkbox\" id=\"hasPhoto\" name=\"hasPhoto\" ${dataCar.hasPhoto ? 'checked' : ''}>\n          </div>\n\n          <fieldset class=\"inputGroup\">\n            <legend>Case Details</legend>\n          \n            <label for=\"caseType\">Case Type:</label>\n            <select id=\"caseType\" name=\"caseType\" required>\n              <option value=\"\" selected disabled>Select a type</option>\n              ${cases}\n            </select>\n            \n            <div class=\"radioGroup\">\n              <label>Has Case:</label>\n              \n              <div class=\"radioEntry\">\n                <label for=\"yes\">Yes</label>\n                <input type=\"radio\" id=\"yes\" name=\"hasCase\" value=\"true\" ${dataCar.caseDetails.status===true ? 'checked' : ''}>\n              </div>\n\n              <div class=\"radioEntry\">\n                <label for=\"no\">No</label>\n                <input type=\"radio\" id=\"no\" name=\"hasCase\" value=\"false\" ${dataCar.caseDetails.status===false || dataCar.caseDetails.status === undefined ? 'checked' : ''}>\n              </div>\n              \n              <div class=\"radioEntry\">\n                <label for=\"na\">N/A</label>\n                <input type=\"radio\" id=\"na\" name=\"hasCase\" value=\"null\" ${dataCar.caseDetails.status===null ? 'checked' : ''}>\n              </div>\n            </div>\n          </fieldset>\n\n          <div class=\"inputGroup\">\n            <label for=\"quantity\">Quantity:</label>\n            <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" value=\"${dataCar.quantity > 0 ? dataCar.quantity : 1}\">\n          </div>\n\n          <button type=\"submit\">Add car</button>\n        </form>\n      </div>\n    </section>`;\n\n  return html;\n}\nexport default fragmentFormCarAdd;\n\n/**\n * Generates the options for a dropdown based on the provided items.\n * \n * This helper function is primarily used to generate options for dropdown menus.\n * It takes in an array of items, and based on the properties provided, it constructs\n * the options for the dropdown. It also checks which option should be pre-selected.\n *\n * @param {Array} items - The list of items from which the options are to be generated.\n * @param {string} selectedValue - The value which should be pre-selected in the dropdown.\n * @param {string} valueProp - The property of the item object which should be used as the value for the option.\n * @param {string} nameProp - The property of the item object which should be used as the display name for the option.\n * @return {string} - The constructed options string for a dropdown.\n */\nconst generateOptions = (items, selectedValue, valueProp = 'id', nameProp = 'name') => {\n  return items.map(item => `\n    <option value=\"${item[valueProp]}\" ${item[valueProp] === selectedValue ? 'selected' : ''}>\n      ${item[nameProp]}\n    </option>\n  `).join('');\n}", "/**\n * carAdd.js\n *\n * This module provides the template for the \"Add Car\" page of the admin interface.\n * It contains the logic for rendering the car addition form and displaying the details\n * of a car that's just been added. The module also checks for a quick login status\n * to determine what content to display.\n */\n\n// External Dependencies\nimport fragmentContent from '../fragments/content';\nimport fragmentFormCarAdd from '../fragments/formCarAdd';\nimport { quickLogin } from '../utils/misc';\n\n/**\n * Generates the HTML template for the \"Add Car\" admin page.\n *\n * @param {Request} request - The incoming request object.\n * @param {Object} options - Additional optional parameters, including feedback and car details.\n * @return {string} The HTML template of the \"Add Car\" page.\n */\nconst templateAdminCarAdd = async (request, options = {}) => {\n  const contentTop = [\n    `<h1>Add car</h1>`\n  ];\n\n  const contentFeedback = [\n    options.feedback ? fragmentContent(addedDetail(options)) : null,\n  ].join('');\n\n  const sections = [\n    fragmentContent(contentTop),\n    contentFeedback || null,\n    await fragmentFormCarAdd(options),\n  ].join('');\n\n  return quickLogin(request) || sections;\n}\nexport default templateAdminCarAdd;\n\n/**\n * Constructs the HTML segment for displaying the details of the added car.\n *\n * @param {Object} options - Contains feedback and car details.\n * @return {string} The HTML segment for the added car details.\n */\nconst addedDetail = (options) => {\n  const sections = [\n    `<h2>${options.feedback.message}</h2>`,\n    createCarDetails(options.data),\n  ].join('');\n\n  return sections;\n}\n\n/**\n * Constructs the HTML card for the details of a specific car.\n *\n * @param {Object} data - Contains the car details.\n * @return {string} The HTML card displaying the car's details.\n */\nconst createCarDetails = (data) => {\n  const html = `<h3>Car details</h3>\n  <div class=\"carCard\">\n    <ul class=\"carDetails\">\n      <li><strong>ID:</strong> ${data.id}</li>\n      <li><strong>Code:</strong> ${data.code}</li>\n      <li><strong>Base:</strong> ${data.base}</li>\n      <li><strong>Name:</strong> ${data.name}</li>\n      <li><strong>Make:</strong> ${data.make}</li>\n      <li><strong>Brand:</strong> ${data.brand}</li>\n      <li><strong>Category:</strong> ${data.categoryDetails.name}</li>\n      <li><strong>Case type:</strong> ${data.caseDetails.name}</li>\n      <li><strong>In case:</strong> ${data.caseDetails.status===null ? 'n/a' : data.caseDetails.status ? 'Yes' : 'No'}</li>\n      <li><strong>Has photo:</strong> ${data.hasPhoto ? 'Yes' : 'No'}</li>\n      <li><strong>Quantity:</strong> ${data.quantity}</li>\n    </ul>\n  </div>`;\n  return html;\n}", "/**\n * formCarSearch.js\n * \n * This module provides a fragment to construct the HTML for the form to search for vehicles in the JSON.\n * The form contains multiple fields by which the admin can filter and search for cars. This includes\n * fields such as ID, code, name, make, category, etc. This module also makes use of helper functions \n * to retrieve unique car categories and case types from the entire dataset.\n */\n\n// External Dependencies\nimport { servicesGithubDataCarsAll } from '../../../lib/services/github';\nimport { getUniqueCarCategories, getUniqueCarCaseTypes } from '../../../lib/utils/dataCars';\nimport { generateOptions } from '../utils/misc';\n\n/**\n * Constructs and returns the HTML for the car search form.\n * \n * This function creates a form with various input fields to allow admins to search for specific cars\n * in the database. It uses helper functions to populate dropdown menus with unique values from the dataset.\n * The form also provides the option to reset all fields.\n *\n * @param {Object} options - Additional optional parameters.\n * @return {string} - The constructed HTML string for the car search form.\n */\nconst fragmentFormCarSearch = async (options = {}) => {\n  const dataCarsAll = await servicesGithubDataCarsAll();\n\n  const categories = generateOptions(getUniqueCarCategories(dataCarsAll));\n  const cases = generateOptions(getUniqueCarCaseTypes(dataCarsAll));\n\n  const html = `\n    <!-- Car Search Form Section -->\n    <section class=\"fragmentContent adminCenter\">\n      <h2>Car search form</h2>\n      <div class=\"formContainer\">\n        <!-- Actual Form Begins -->\n        <form action=\"/admin/search-car\" method=\"post\" class=\"adminForm\">\n          <div class=\"inputGroup\">\n            <label for=\"id\">ID:</label>\n            <input type=\"number\" min=\"0\" id=\"id\" name=\"id\">\n          </div>\n          <div class=\"inputGroup\">\n            <label for=\"code\">Code:</label>\n            <input type=\"text\" id=\"code\" name=\"base\">\n          </div>\n          <div class=\"inputGroup\">\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\">\n          </div>\n          <div class=\"inputGroup\">\n            <label for=\"make\">Make:</label>\n            <input type=\"text\" id=\"make\" name=\"make\">\n          </div>\n          <div class=\"inputGroup\">\n            <label for=\"category\">Category:</label>\n            <select id=\"category\" name=\"category\">\n              <option value=\"\" selected>Select a category</option>\n              ${categories}\n            </select>\n          </div>\n          <div class=\"inputGroup\">\n            <label for=\"brand\">Brand:</label>\n            <input type=\"text\" id=\"brand\" name=\"brand\">\n          </div>\n          <fieldset class=\"inputGroup\">\n            <label>Photo is online:</label>\n            <div class=\"radioGroup\">\n              <div class=\"radioEntry\">\n                <label for=\"hasPhoto-yes\">Yes</label>\n                <input type=\"radio\" id=\"hasPhoto-yes\" name=\"hasPhoto\" value=\"true\">\n              </div>\n\n              <div class=\"radioEntry\">\n                <label for=\"hasPhoto-no\">No</label>\n                <input type=\"radio\" id=\"hasPhoto-no\" name=\"hasPhoto\" value=\"false\">\n              </div>\n            </div>\n          </fieldset>\n          <fieldset class=\"inputGroup\">\n            <legend>Case Details</legend>\n          \n            <label for=\"caseType\">Case Type:</label>\n            <select id=\"caseType\" name=\"caseType\">\n              <option value=\"\" selected>Select a type</option>\n              ${cases}\n            </select>\n            \n            <div class=\"radioGroup\">\n              <label>Has Case:</label>\n              \n              <div class=\"radioEntry\">\n                <label for=\"hasCase-yes\">Yes</label>\n                <input type=\"radio\" id=\"hasCase-yes\" name=\"hasCase\" value=\"true\">\n              </div>\n\n              <div class=\"radioEntry\">\n                <label for=\"hasCase-no\">No</label>\n                <input type=\"radio\" id=\"hasCase-no\" name=\"hasCase\" value=\"false\">\n              </div>\n              \n              <div class=\"radioEntry\">\n                <label for=\"hasCase-na\">N/A</label>\n                <input type=\"radio\" id=\"hasCase-na\" name=\"hasCase\" value=\"null\">\n              </div>\n            </div>\n          </fieldset>\n          <button type=\"reset\">Reset form</button>\n          <button type=\"submit\">Search car</button>\n        </form>\n      </div>\n    </section>`;\n\n  return html;\n}\nexport default fragmentFormCarSearch;", "/**\n * carSearch.js\n *\n * This module provides the template for the \"Search Car\" page of the admin interface.\n * It contains the logic for rendering the search form, displaying the search results\n * in a table format, and providing an edit option for the listed cars.\n * The module also checks for an authentication status to determine what content to display.\n */\n\n// External Dependencies\nimport fragmentContent from '../fragments/content';\nimport fragmentFormCarSearch from '../fragments/formCarSearch';\nimport { quickLogin } from '../utils/misc';\n\n/**\n * Generates the HTML template for the \"Search Car\" admin page.\n *\n * @param {Request} request - The incoming request object.\n * @param {Object} options - Additional optional parameters, including feedback and car search results.\n * @return {string} The HTML template of the \"Search Car\" page.\n */\nconst templateAdminCarSearch = async (request, options = {}) => {\n  \n  const contentTop = [\n    `<h1>Search car</h1>`\n  ];\n\n  const contentFeedback = [\n    options.feedback ? fragmentContent(addedDetail(options)) : null,\n  ].join('');\n\n  const sections = [\n    fragmentContent(contentTop),\n    contentFeedback || null,\n    await fragmentFormCarSearch(options),\n  ].join('');\n\n  return options.isAuthenticated ?  sections :  quickLogin(request) || sections;\n}\nexport default templateAdminCarSearch;\n\n/**\n * Constructs the HTML segment for displaying the feedback and search results table.\n *\n * @param {Object} options - Contains feedback and car search results.\n * @return {string} The HTML segment for the feedback and search results.\n */\nconst addedDetail = (options) => {\n\n  const sections = [\n    `<h2>${options.feedback.message}</h2>`,\n    createTable(options.data),\n  ].join('');\n\n  return sections;\n}\n\n/**\n * Constructs the HTML table for displaying the car search results.\n *\n * @param {Array} data - Contains the car search results.\n * @return {string} The HTML table displaying the car search results.\n */\nconst createTable = (data) => {\n\n  const svg = {\n    true: generateSVG('true'),\n    false: generateSVG('false'),\n    null: generateSVG('null'),\n  }\n\n  const rows = data.map(car => `\n  <tr>\n    <td><input type=\"radio\" name=\"carId\" id=\"car${car.id}\" value=\"${car.id}\"></td>\n    <td><label for=\"car${car.id}\">${car.id}</label></td>\n    <td><label for=\"car${car.id}\">${car.name}</label></td>\n    <td><label for=\"car${car.id}\">${car.make}</label></td>\n    <td><label for=\"car${car.id}\">${car.code}</label></td>\n    <td><label for=\"car${car.id}\">${car.base}</label></td>\n    <td><label for=\"car${car.id}\">${car.categoryDetails.name}</label></td>\n    <td><label for=\"car${car.id}\">${car.brand}</label></td>\n    <td><label for=\"car${car.id}\">${car.caseDetails.name}</label></td>\n    <td>\n      <label for=\"car${car.id}\">\n        ${car.caseDetails.status === true ? \n          svg.true : \n          car.caseDetails.status === false ? \n          svg.false : \n          svg.null}\n        </label>\n    </td>\n    <td>\n      <label for=\"car${car.id}\">\n        ${car.hasPhoto ? \n          svg.true : \n          svg.false}\n      </label>\n    </td>\n    <td><label for=\"car${car.id}\">${car.addedDetails.date}</label></td>\n    <td><label for=\"car${car.id}\">${car.quantity}</label></td>\n  </tr>\n`).join('');\n\n  const html = `<section>\n    <h2>Cars found</h2>\n    <div class=\"tableAdmin\">\n      <form action=\"/admin/edit-car\" method=\"post\">\n        <div class=\"tableWrapper\">\n          <table>\n            <thead>\n              <tr>\n                <th>Edit</th>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Make</th>\n                <th>Code</th>\n                <th>Base</th>\n                <th>Category</th>\n                <th>Brand</th>\n                <th>Case type</th>\n                <th>Has case</th>\n                <th>Has photo</th>\n                <th>Added date</th>\n                <th>Quantity</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${rows}\n            </tbody>\n          </table>\n        </div>\n        <button type=\"submit\">Edit Selected Car</button>\n      </form>\n    </div>\n  </section>`;\n  return html;\n}\n\n/**\n * Constructs the SVG icons for displaying certain car attributes.\n *\n * @param {string} value - The attribute value (true, false, or null).\n * @return {string} The SVG icon corresponding to the attribute value.\n */\nconst generateSVG = (value) => {\n  const svgData = {\n    true:{\n      label: 'True',\n      viewbox: '0 0 448 512',\n      path: '<path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/>',\n    },\n    false:{\n      label: 'False',\n      viewbox: '0 0 384 512',\n      path: '<path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/>',\n    },\n    null:{\n      label: 'Null',\n      viewbox: '0 0 512 512',\n      path: '<path d=\"M304 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zm0 416a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM48 304a48 48 0 1 0 0-96 48 48 0 1 0 0 96zm464-48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM142.9 437A48 48 0 1 0 75 369.1 48 48 0 1 0 142.9 437zm0-294.2A48 48 0 1 0 75 75a48 48 0 1 0 67.9 67.9zM369.1 437A48 48 0 1 0 437 369.1 48 48 0 1 0 369.1 437z\"/>',\n    }\n  }\n  const data = svgData[value];\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"${data.viewbox}\" role=\"img\" aria-label=\"${data.label}\">\n    ${data.path}\n  </svg>`;\n}", "/**\n * formCarEdit.js\n * \n * This module provides a fragment to construct the HTML for the form to edit existing vehicles in the JSON.\n * The form contains various input fields, like code, base, name, make, category, etc. \n * It also utilizes helper functions to generate the dropdown options and to validate data.\n */\n\n// External Dependencies\nimport { servicesGithubDataCarsAll } from '../../../lib/services/github';\nimport { getUniqueCarCategories, getUniqueCarCaseTypes } from '../../../lib/utils/dataCars';\n\n/**\n * Constructs and returns the HTML for the edit car form.\n * \n * The function takes in the data of the car to be edited and pre-fills the form.\n * This makes it easier for the user to edit only the fields they want to change.\n * The form also contains validations, like checking for duplicate codes.\n *\n * @param {Object} data - The data object containing the car details to be edited.\n * @param {Object} options - Additional optional parameters.\n * @return {string} - The constructed HTML string for the edit car form.\n */\nconst fragmentFormCarEdit = async (data, options = {}) => {\n  const dataCarsAll = await servicesGithubDataCarsAll();\n  const dataCar = {...data};\n\n  const categories = generateOptions(getUniqueCarCategories(dataCarsAll), dataCar.categoryDetails.id);\n  const cases = generateOptions(getUniqueCarCaseTypes(dataCarsAll), dataCar.caseDetails.id);\n\n  const html = `\n    <!-- Edit Car Form Section -->\n    <section class=\"fragmentContent adminCenter\">\n      <h2>Edit car form</h2>\n      <div class=\"formContainer\">\n        <!-- Actual Form Begins -->\n        <form action=\"/admin/edit-car\" method=\"post\" class=\"adminForm\">\n\n        <input type=\"hidden\" name=\"id\" id=\"id\" value=\"${dataCar.id}\">\n        <input type=\"hidden\" name=\"action\" id=\"formAction\" value=\"editSubmit\">\n\n        <div class=\"inputGroup\">\n          <p>ID: ${dataCar.id}</p>\n        </div>\n\n        <div class=\"inputGroup\">\n          <label for=\"base\">Code:</label>\n          <input type=\"text\" id=\"code\" name=\"code\" value=\"${dataCar.code || ''}\">\n        </div>\n\n\n        <div class=\"inputGroup\">\n          <label for=\"base\">Base:</label>\n          <input type=\"text\" id=\"base\" name=\"base\" value=\"${dataCar.base || ''}\" >\n        </div>\n\n        <div class=\"inputGroup\">\n          <label for=\"name\">Name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" value=\"${dataCar.name}\" required>\n        </div>\n\n        <div class=\"inputGroup\">\n          <label for=\"make\">Make:</label>\n          <input type=\"text\" id=\"make\" name=\"make\" value=\"${dataCar.make}\" required>\n        </div>\n\n        <div class=\"inputGroup\">\n          <label for=\"category\">Category:</label>\n          <select id=\"category\" name=\"category\" required>\n            <option value=\"\" disabled>Select a category</option>\n            ${categories}\n          </select>\n        </div>\n\n        <div class=\"inputGroup\">\n          <label for=\"brand\">Brand:</label>\n          <input type=\"text\" id=\"brand\" name=\"brand\" value=\"${dataCar.brand || ''}\">\n        </div>\n\n        <div class=\"inputGroup\">\n          <label for=\"hasPhoto\">Photo is online:</label>\n          <input type=\"checkbox\" id=\"hasPhoto\" name=\"hasPhoto\" ${dataCar.hasPhoto ? 'checked' : ''}>\n        </div>\n\n        <fieldset class=\"inputGroup\">\n          <legend>Case Details</legend>\n        \n          <label for=\"caseType\">Case Type:</label>\n          <select id=\"caseType\" name=\"caseType\" required>\n            <option value=\"\" disabled>Select a type</option>\n            ${cases}\n          </select>\n          \n          <div class=\"radioGroup\">\n            <label>Has Case:</label>\n            \n            <div class=\"radioEntry\">\n              <label for=\"yes\">Yes</label>\n              <input type=\"radio\" id=\"yes\" name=\"hasCase\" value=\"true\" ${dataCar.caseDetails.status===true ? 'checked' : ''}>\n            </div>\n\n            <div class=\"radioEntry\">\n              <label for=\"no\">No</label>\n              <input type=\"radio\" id=\"no\" name=\"hasCase\" value=\"false\" ${dataCar.caseDetails.status===false || dataCar.caseDetails.status === undefined ? 'checked' : ''}>\n            </div>\n            \n            <div class=\"radioEntry\">\n              <label for=\"na\">N/A</label>\n              <input type=\"radio\" id=\"na\" name=\"hasCase\" value=\"null\" ${dataCar.caseDetails.status===null ? 'checked' : ''}>\n            </div>\n          </div>\n        </fieldset>\n\n        <div class=\"inputGroup\">\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" value=\"${dataCar.quantity > 0 ? dataCar.quantity : 1}\">\n        </div>\n\n        <button type=\"submit\">Edit car</button>\n      </form>\n    </div>\n  </section>`;\n\n  return html;\n}\nexport default fragmentFormCarEdit;\n\n/**\n * Generates the options for a dropdown based on the provided items.\n * \n * This helper function is primarily used to generate options for dropdown menus.\n * It takes in an array of items, and based on the properties provided, it constructs\n * the options for the dropdown. It also checks which option should be pre-selected.\n *\n * @param {Array} items - The list of items from which the options are to be generated.\n * @param {string} selectedValue - The value which should be pre-selected in the dropdown.\n * @param {string} valueProp - The property of the item object which should be used as the value for the option.\n * @param {string} nameProp - The property of the item object which should be used as the display name for the option.\n * @return {string} - The constructed options string for a dropdown.\n */\nconst generateOptions = (items, selectedValue, valueProp = 'id', nameProp = 'name') => {\n  return items.map(item => `\n    <option value=\"${item[valueProp]}\" ${item[valueProp] === selectedValue ? 'selected' : ''}>\n      ${item[nameProp]}\n    </option>\n  `).join('');\n}", "/**\n * carEdit.js\n * \n * This module provides the template for the \"Edit Car\" page of the admin interface.\n * It contains the logic for rendering the car editing form and displaying feedback \n * after a car search or edit action. Authentication checks are also performed \n * to determine what content to display.\n */\n\n// External Dependencies\nimport fragmentContent from '../fragments/content';\nimport fragmentFormCarSearch from '../fragments/formCarSearch';\nimport fragmentFormCarEdit from '../fragments/formCarEdit';\nimport { quickLogin } from '../utils/misc';\n\n/**\n * Generates the HTML template for the \"Edit Car\" admin page.\n *\n * @param {Request} request - The incoming request object.\n * @param {Object} options - Additional optional parameters, including feedback and car details.\n * @return {string} The HTML template of the \"Edit Car\" page.\n */\nconst templateAdminCarEdit = async (request, options = {}) => {\n\n  // Check if the feedback indicates a search result\n  if(!options.feedback.search){\n    return await response(options);\n  }\n\n  const sections = [\n    await fragmentFormCarEdit(options.data),\n  ].join('');\n\n  // If the user is authenticated, return the sections. Otherwise, return the login prompt.\n  return options.isAuthenticated ?  sections :  quickLogin(request) || sections;\n}\nexport default templateAdminCarEdit;\n\n/**\n * Constructs the HTML segment for displaying the feedback and search form.\n *\n * @param {Object} options - Contains feedback and car details.\n * @return {Array} An array containing the HTML segments for feedback and the search form.\n */\nconst response = async (options) => {\n  const sections = [\n    fragmentContent(addedDetail(options)),\n    await fragmentFormCarSearch(),\n  ];\n  return sections;\n}\n\n/**\n * Constructs the HTML segment for displaying the feedback after a car search.\n *\n * @param {Object} options - Contains feedback and car details.\n * @return {string} The HTML segment for the feedback.\n */\nconst addedDetail = (options) => {\n\n  const sections = [\n    `<div class=\"adminCenter\">`,\n      `<h2>${options.feedback.message}</h2>`,\n      `<p>Car ID searched for was: ${options.data.id}</p>`,\n    `</div>`,\n  ].join('');\n\n  return sections;\n}", "/**\n * template.js\n * \n * This module handles the templates for the admin section.\n */\n\n// Import the various sections used in the construction of the admin page.\nimport documentHead from '../construction/documentHead';\nimport documentEnd from '../construction/documentEnd';\nimport pageHead from '../construction/pageHead';\nimport pageBreadcrumbs from '../construction/pageBreadcrumbs';\nimport pageAFooter from '../construction/pageFooter';\n\n// Import the specific templates for different admin actions.\nimport templateHome from '../templates/home';\nimport templateAdminCarAdd from '../templates/carAdd';\nimport templateAdminCarSearch from '../templates/carSearch';\nimport templateAdminCarEdit from '../templates/carEdit';\n\n/**\n * Main handler function for displaying the appropriate admin template based on the request URL.\n * \n * @param {Request} request - The incoming request object.\n * @param {Object} options - Configuration and context data for rendering the template.\n * @return {Response} - A rendered admin page or a default message.\n */\nconst handlerTemplate = async (request, options = {}) => {\n  const url = new URL(request.url);\n\n  // Mapping of URLs to their respective template functions.\n  const templateMappings = {\n    '/admin': templateHome,\n    '/admin/add-car': templateAdminCarAdd,\n    '/admin/search-car': templateAdminCarSearch,\n    '/admin/edit-car': templateAdminCarEdit,\n  };\n\n  // Determine which template function to use based on the URL's pathname.\n  const templateFunction = templateMappings[url.pathname];\n  \n  // If a template function is found for the given URL, render and return the page.\n  if (templateFunction) {\n    return new Response(\n      await createPage(templateFunction, request, options),\n      {\n        status: 200,\n        headers: {\n          'Content-Type': 'text/html',\n          'x-robots-tag': 'noindex'\n        }\n      }\n    );\n  }\n\n  // Default response if no template function matches the URL's pathname.\n  return new Response('template Handler');\n}\nexport default handlerTemplate;\n\n/**\n * Assembles the admin page by piecing together various sections and the specific template.\n * \n * @param {Function} templateFunction - The specific template function to render the main content.\n * @param {Request} request - The incoming request object.\n * @param {Object} options - Configuration and context data for rendering the template.\n * @return {string} - A fully assembled HTML page as a string.\n */\nconst createPage = async (templateFunction, request, options = {}) => {\n  // Default values for the options if not provided.\n  const {\n    isAuthenticated = false,\n    feedback = {\n      success: null,\n      message: null,\n    },\n    data = null\n  } = options;\n\n  // List of sections that make up the structure of the admin page.\n  const sections = [\n    documentHead,\n    pageHead,\n    pageBreadcrumbs,\n    templateFunction,\n    pageAFooter,\n    documentEnd,\n  ];\n\n  // Resolve each section, which might be asynchronous, and concatenate them together.\n  const resolvedSections = await Promise.all(\n    sections.map(async section => {\n      const result = await section(request, options);\n      return Array.isArray(result) ? result.join('') : result;\n    })\n  );\n\n  return resolvedSections.join('');\n}\n", "/**\n * adminLogin.js\n * \n * This module provides the logic for the admin login functionality.\n * It validates the credentials provided by the user and sets an authentication cookie if successful.\n * Otherwise, it returns a 401 Unauthorized response.\n */\n\n// External Dependencies\nimport handlerAdminTemplate from './template';\nimport { isLoggedIn } from '../utils/misc';\n\n// Admin credentials (should ideally be stored securely, e.g., in environment variables)\nconst validName = ADMIN_NAME;\nconst validPassword = ADMIN_PASSWORD;\n\n/**\n * Handles the admin login request. If the submitted credentials are valid, an authentication cookie is set.\n * Otherwise, a 401 Unauthorized response is returned.\n *\n * @param {Request} request - The incoming request object with form data containing login credentials.\n * @param {Object} options - Additional optional parameters.\n * @return {Response} - The response to the login attempt, which may be an authenticated page or an error message.\n */\nconst handlerAdminLogin = async (request, options = {}) => {\n  \n  const formData = await request.formData();\n  const submittedName = formData.get('username');\n  const submittedPassword = formData.get('password');\n\n  if (submittedName === validName && submittedPassword === validPassword) {\n\n    const redirectTo = new URL(request.headers.get('Referer') || '/admin');\n\n    const cookie = createCookie();\n\n    if(redirectTo.pathname === '/admin' || isLoggedIn(request)){\n      return showAdmin(cookie, request);\n    }\n\n    return new Response(null, {\n      status: 302,\n      headers: {\n        'Location': redirectTo,\n        'Set-Cookie': cookie,\n      }\n    });\n  }\n  return new Response('Invalid credentials. Please try again.', {\n    status: 401,\n    headers: {\n        'Content-Type': 'text/plain',\n        'X-Robots-Tag': 'noindex'\n    }\n  });\n}\nexport default handlerAdminLogin;\n\n/**\n * Renders the admin page and sets the authentication cookie.\n *\n * If the user successfully logs in, this function is invoked to show the admin page and set the\n * authentication cookie in the response headers.\n *\n * @param {string} cookie - The authentication cookie to be set.\n * @param {Request} request - The incoming request object.\n * @return {Response} - The rendered admin page with the authentication cookie set.\n */\nconst showAdmin = async (cookie, request) => {\n  let content = await handlerAdminTemplate(request,{\n    isAuthenticated: true\n  });\n\n  // Ensure content is wrapped in a Response object if not already\n  if (!(content instanceof Response)) {\n    content = new Response(content,{\n      status:200,\n      headers:{\n        'x-robots-x': 'noindex',\n        'Content-Type': 'text/html',\n      }\n    });\n  }\n\n  content.headers.set('Set-Cookie', cookie);\n\n  return content;\n}\n\n/**\n * Creates an authentication cookie with a validity of 1 day.\n *\n * This function constructs a cookie string with appropriate settings to ensure\n * the user remains authenticated for a day after successful login.\n *\n * @return {string} - The constructed authentication cookie string.\n */\nconst createCookie = () => {\n  const expiryDate = new Date();\n  expiryDate.setDate(expiryDate.getDate() + 1);\n\n  const cookie = `admin-authenticated=true; Expires=${expiryDate.toUTCString()}; HttpOnly; SameSite=Strict; Path=/admin;`;\n  return cookie;\n}", "/**\n * adminLogout.js\n * \n * This module provides the logic for the admin logout functionality.\n * It deletes the authentication cookie to effectively log the admin out.\n */\n\n/**\n * Handles the admin logout request by deleting the authentication cookie.\n *\n * This function constructs a response that deletes the authentication cookie by setting \n * its expiry to a past date, effectively logging the admin out.\n *\n * @param {Request} request - The incoming request object.\n * @return {Response} - The response to the logout request, which directs the user back \n *                      to the page they were on, or to the admin home page if no referrer is available.\n */\nconst handlerAdminLogout = async (request) => {\n  const redirectTo = request.headers.get('Referer') || '/admin';\n  return new Response(null, {\n      status: 302, // Using 302 for temporary redirect\n      headers: {\n          'Location': redirectTo,\n          'Set-Cookie': 'admin-authenticated=; HttpOnly; SameSite=Strict; Path=/admin; Expires=Thu, 01 Jan 1970 00:00:00 GMT;' // This will effectively delete the cookie\n      }\n  });\n}\nexport default handlerAdminLogout;", "/**\n * adminGitHub.js\n *\n * This module handles the interactions with GitHub's API for the purposes of:\n * 1. Retrieving car data from a specific repository and file.\n * 2. Submitting updated car data to the same repository and file.\n *\n * It leverages the GitHub API to fetch and update the specified file's content.\n * The key functionalities include decoding the base64 encoded data from GitHub \n * and submitting new data in a similar format.\n */\n\n// External Dependencies\nimport { base64Decode } from '../../../lib/utils/misc';\n\n// Constants related to the GitHub repository and file details\nconst apiKey = GITHUB_API_KEY;\nconst REPO_OWNER = 'Kevin-Ellen';\nconst REPO_NAME = 'tinyfords-v2';\nconst FILE_PATH = 'src/data/cars.json';\nconst url = `https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/contents/${FILE_PATH}`;\n\n/**\n * Fetches car data from a specific GitHub repository.\n *\n * @return {Object} An object containing the SHA of the file and its decoded content.\n */\nexport const adminGitHubGetCarsData = async () => {\n  const response = await fetch(url, {\n    headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'User-Agent': 'tinyfords-v2-app',\n        'Accept': 'application/vnd.github+json'\n    }\n  });\n\n  const data = await response.json();\n  const decoded = base64Decode(data.content);\n  const fileContent = JSON.parse(decodeURIComponent(decoded));\n\n  return {\n    sha: data.sha,\n    data: fileContent\n  };\n}\n\n/**\n * Submits updated car data to a specific GitHub repository.\n *\n * @param {Array} data - The updated car data to be submitted.\n * @param {string} sha - The SHA of the current version of the file.\n * @return {Object} An object indicating the success status and a corresponding message.\n */\nexport const adminGitHubSubmitCarsData = async (data, sha) => {\n  const updatedContentBase64 = btoa(JSON.stringify(data));\n  \n  const response = await fetch(url, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${apiKey}`,\n      'User-Agent': 'tinyfords-v2-app',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      message: 'Added/edited a car through the interface',\n      content: updatedContentBase64,\n      sha: sha  // SHA of the current version of the file\n    })\n  });\n\n  const responseData = await response.json();\n  if (response.ok) {\n    return { success: true, message: 'Car added successfully!' };\n  } else {\n    return { success: false, message: responseData.message };\n  }\n}", "/**\n * carAdd.js\n * \n * This module provides the logic for adding a car to the data set.\n * It first constructs the new car data, checks for duplicates, \n * and then attempts to push the new car to the data set.\n */\n\n// External Dependencies\nimport { adminGitHubGetCarsData, adminGitHubSubmitCarsData } from '../services/github';\nimport { duplicateChecker } from '../utils/misc';\nimport handlerTemplate from './template';\nimport utilCarConstruct from '../../../lib/utils/carConstruct';\n\n/**\n * Handles the car addition request by adding the new car data to the data set.\n *\n * This function constructs the new car data, checks for duplicates in the existing data, \n * and then pushes the new car to the data set if there are no conflicts.\n *\n * @param {Request} request - The incoming request object with form data containing new car details.\n * @return {Response} - The response to the car addition request, which may contain success or error messages.\n */\nconst handlerAdminCarAdd = async (request) => {\n  const formData = await request.formData();\n  const formDataObject = Object.fromEntries(formData.entries());\n\n  const dataCarsAll = await adminGitHubGetCarsData();\n\n  const newCar = utilCarConstruct(dataCarsAll.data, formDataObject);\n\n  const dupeCheck = duplicateChecker(dataCarsAll.data, ['id', 'code'], newCar);\n\n  if (!dupeCheck.success){\n    return handlerTemplate(request,{\n      feedback: {\n        success: false,\n        message: `Fail: ${dupeCheck.message}`,\n      },\n      data:newCar\n    });\n  }\n\n  newCar.addedDetails.by = ADMIN_NAME;\n  newCar.addedDetails.date = new Date().toISOString().split('T')[0];\n\n  dataCarsAll.data.push(newCar);\n\n\n  const response = await adminGitHubSubmitCarsData(dataCarsAll.data, dataCarsAll.sha);\n\n  return handlerTemplate(request,{\n    feedback: {\n      success: response.success,\n      message: response.message\n    },\n    data:newCar\n  });\n}\nexport default handlerAdminCarAdd;", "/**\n * searchTools.js\n * \n * This module contains utility functions to assist with searching and shaping\n * car data for querying. The tools allow for specific filtering of car data\n * based on various criteria, such as photo availability, case details, category,\n * and more.\n */\n\nimport { getCaseById, getCategoryById } from \"./dataCars\";\n\n/**\n * Shapes and prepares the search form data for querying.\n * \n * @param {Array} dataCarsAll - All car data.\n * @param {Object} data - The search criteria.\n * @returns {Object} - The shaped search criteria.\n */\nexport const toolShapeSearchFormData = (dataCarsAll, data) => {\n  const shapedData = {};\n\n  // Process the hasPhoto property\n  if ('hasPhoto' in data) {\n    shapedData.hasPhoto = data.hasPhoto === \"true\";\n  }\n\n  // Handle the hasCase property and related case details\n  if( 'hasCase' in data ){\n    if (data.caseType) {\n      const caseDetails = getCaseById(dataCarsAll, data.caseType);\n      if (caseDetails) {\n        shapedData.caseDetails = caseDetails;\n        shapedData.caseDetails.status = shapedData.hasCase;\n      }\n    } else {\n      shapedData.caseDetails = {};\n    }\n    shapedData.caseDetails.status = data.hasCase === \"true\" ? true : data.hasCase === \"false\" ? false : null;\n\n    // Clean up temporary properties\n    ['hasCase', 'caseType'].forEach(prop => delete data[prop]);\n  }\n\n  // Process the category details\n  if (data.category) {\n    const categoryDetails = getCategoryById(dataCarsAll, data.category);\n    if (categoryDetails) {\n      shapedData.categoryDetails = categoryDetails;\n    }\n    ['category'].forEach(prop => delete data[prop]);\n  }\n\n  // Convert id to an integer if present\n  if(data.id){\n    data.id = parseInt(data.id, 10);\n  }\n\n  // Copy other properties without any transformation\n  for (const key in data) {\n    shapedData[key] = data[key];\n\n    // Remove any properties that are empty or null\n    if (shapedData[key] === \"\" || shapedData[key] === null) {\n      delete shapedData[key];\n    }\n  }\n\n  return shapedData;\n}\n\n/**\n * Filters a car based on provided criteria.\n * \n * @param {Object} car - The car data.\n * @param {Object} criteria - The search criteria.\n * @returns {boolean} - Whether the car matches the criteria or not.\n */\nexport const toolCarSearch = (car, criteria) => {\n  for (const key in criteria) {\n    if (typeof criteria[key] === 'object' && criteria[key] !== null) {\n      // If the criteria is an object (like caseDetails), we iterate through its sub-properties\n      for (const subKey in criteria[key]) {\n        if (car[key][subKey] !== criteria[key][subKey]) {\n          return false; // If any sub-property doesn't match, the car doesn't meet the criteria\n        }\n      }\n    } else if (car[key] !== criteria[key]) {\n      return false; // If any direct property doesn't match, the car doesn't meet the criteria\n    }\n  }\n  return true; // The car meets all provided criteria\n}", "/**\n * carSearch.js\n * \n * This module provides logic for the admin car search functionality.\n * It takes the user's search criteria, processes the criteria to be usable for searching,\n * and then searches the car dataset for any matches.\n */\n\n// External Dependencies\nimport { servicesGithubDataCarsAll } from '../../../lib/services/github';\nimport { toolShapeSearchFormData, toolCarSearch } from '../../../lib/utils/searchTools';\nimport handlerTemplate from './template';\n\n/**\n * Handles the car search request by processing the search criteria and filtering the car dataset.\n *\n * @param {Request} request - The incoming request object with form data containing search criteria.\n * @return {Response} - The response to the search request, which may contain a list of matching cars or a feedback message.\n */\nconst handlerAdminCarSearch = async (request) => {\n  const dataCarsAll = await servicesGithubDataCarsAll();\n\n  const formData = await request.formData();\n  const formDataObject = Object.fromEntries(formData.entries());\n  const shapedData = toolShapeSearchFormData(dataCarsAll, formDataObject);\n\n  const filteredCars = dataCarsAll.filter(car => toolCarSearch(car, shapedData));\n\n  return handlerTemplate(request,{\n    feedback: {\n      success: true,\n      message: getFeedbackMessage(filteredCars.length),\n    },\n    data:filteredCars\n  });\n}\nexport default handlerAdminCarSearch;\n\n/**\n * Generates a feedback message based on the number of cars found.\n *\n * @param {number} count - The number of cars found.\n * @return {string} - Feedback message.\n */\nconst getFeedbackMessage = (count) => {\n  if (count === 0) return 'Found no cars';\n  if (count === 1) return 'Found 1 car';\n  return `Found ${count} cars`;\n}", "/**\n * carEdit.js\n * \n * This module provides logic for editing car details.\n * It allows for finding a specific car by its ID, updating its details, and checking for changes.\n */\n\n// External Dependencies\nimport { getCarById } from '../../../lib/utils/dataCars';\nimport { adminGitHubGetCarsData, adminGitHubSubmitCarsData } from '../services/github';\nimport { duplicateChecker } from '../utils/misc';\nimport utilCarConstruct from '../../../lib/utils/carConstruct';\nimport handlerTemplate from './template';\n\n/**\n * Handles the car editing request by updating the car data based on provided changes.\n *\n * @param {Request} request - The incoming request object with form data containing updated car details.\n * @param {Object} options - Additional optional parameters.\n * @return {Response} - The response to the car edit request, which may contain success or error messages.\n */\nconst handlerAdminCarEdit = async (request, options) => {\n\n  const dataCarsAll = await adminGitHubGetCarsData();\n\n  const formData = await request.formData();\n  const formDataObject = Object.fromEntries(formData.entries());\n\n  if(formDataObject.action=='editSubmit'){\n    \n    const updatedCar = utilCarConstruct(dataCarsAll.data,formDataObject);\n    const dupeCheck = duplicateChecker(dataCarsAll.data, ['code'], updatedCar);\n\n    if (!dupeCheck.success){\n      return carResponse(request, updatedCar, `Fail: ${dupeCheck.message}`, false);\n    }\n\n    const changes = changeCheck(getCarById(dataCarsAll.data, updatedCar.id), updatedCar);\n\n    if(!changes){\n      return carResponse(request, updatedCar, 'Fail: No changes been found', false);\n    }\n\n    const response = await submitData(dataCarsAll, updatedCar);\n\n    if(!response.success){\n      return carResponse(request, updatedCar, `Fail: ${response.message}`, false);\n    }\n\n    return carResponse(request, updatedCar, 'Car changed successfully!', true);\n  }\n\n  const car = getCarById(dataCarsAll.data, formDataObject.carId);\n\n  if(!car){\n    return carResponse(request, {id:formDataObject.carId}, 'No car found', false);\n  }\n\n  return carResponse(request, car, 'Car found', true, true);\n}\nexport default handlerAdminCarEdit;\n\n/**\n * Wraps the car data and feedback message in a templated response.\n *\n * @param {Request} request - The incoming request object.\n * @param {Object} data - The car data.\n * @param {string} message - Feedback message for the action.\n * @param {boolean} success - Indicates if the action was successful.\n * @param {boolean} search - Indicates if this is a search response.\n * @return {Response} - Templated response with car data and feedback.\n */\nconst carResponse = (request, data, message, success, search = null) => {\n  return handlerTemplate(request, {\n    feedback: {\n      success: success,\n      message: message,\n      search: search,\n    },\n    data:data\n  });\n}\n\n/**\n * Checks for any changes between the old car data and the new data.\n *\n * @param {Object} oldCar - The original car data.\n * @param {Object} newCar - The updated car data.\n * @return {boolean} - Returns true if there are changes, false otherwise.\n */\nconst changeCheck = (oldCar, newCar) => {\n  for (let key in oldCar) {\n    if (key === 'addedDetails') continue;  // Skip addedDetails property\n\n    if (oldCar.hasOwnProperty(key) && newCar.hasOwnProperty(key)) {\n      if (typeof oldCar[key] === 'object' && oldCar[key] !== null && newCar[key] !== null) {\n        // If property is an object, do a deep comparison\n        if (changeCheck(oldCar[key], newCar[key])) {  // If there are changes in the nested object\n          return true;\n        }\n      } else if (oldCar[key] !== newCar[key]) {\n        return true;  // If there's a change in the current key-value pair\n      }\n    }\n  }\n  return false;  // No changes found\n}\n\n/**\n * Identifies the specific changes between the old car data and the new data.\n *\n * @param {Object} oldCar - The original car data.\n * @param {Object} newCar - The updated car data.\n * @return {Object} - Object detailing the specific changes.\n */\nconst findChanges = (oldCar, newCar) => {\n  let changes = {};\n\n  for (let key in oldCar) {\n    if (key === 'addedDetails') continue;  // Skip addedDetails property\n    if (oldCar.hasOwnProperty(key) && newCar.hasOwnProperty(key)) {\n      if (typeof oldCar[key] === 'object' && oldCar[key] !== null && newCar[key] !== null) {\n        // If property is an object, do a deep comparison\n        let innerChanges = findChanges(oldCar[key], newCar[key]);\n        if (Object.keys(innerChanges).length) {\n          changes[key] = innerChanges;\n        }\n      } else if (oldCar[key] !== newCar[key]) {\n        changes[key] = newCar[key];\n      }\n    }\n  }\n\n  return changes;\n}\n\n/**\n * Submits the updated car data to the data set.\n *\n * @param {Array} dataCarsAll - The original list of cars.\n * @param {Object} updatedCar - The car with updated details.\n * @return {Object} - Response from the submission attempt.\n */\nconst submitData = async(dataCarsAll, updatedCar) => {\n  // Remove the addedDetails field from updatedCar\n  delete updatedCar.addedDetails;\n\n  const updatedDataCarsAll = dataCarsAll.data.map(car => {\n    if (car.id === updatedCar.id) {\n      return {\n        ...car,          // Spread properties of the original car\n        ...updatedCar   // Overwrite with properties of updatedCar where they exist\n      };\n    }\n    return car;\n  });\n\n  const response = await adminGitHubSubmitCarsData(updatedDataCarsAll, dataCarsAll.sha);\n\n  return response;\n}", "/**\n * error.js\n * \n * This module provides a utility function to handle and respond to errors.\n * It constructs and returns an error response with the provided status code \n * and message, making it easier to maintain consistent error handling throughout\n * the application.\n */\n\n/**\n * Creates and returns an error response.\n * \n * @param {number} status - The HTTP status code for the error.\n * @param {string} message - A descriptive error message.\n * @returns {Response} - A constructed error Response object with the provided status and message.\n */\nconst handleError = (status, message) => {\n  return new Response(`Error: ${message}`, {status:status});\n}\n\nexport default handleError;", "/**\n * indexAdmin.js\n * \n * This module serves as the main entry point for handling admin-related requests.\n * Based on the request method (GET, POST) and the URL path, it delegates the request\n * to the appropriate handler. If the request doesn't match any defined route, \n * appropriate error messages are returned.\n */\n\n// Importing handlers\nimport handlerTemplate from './lib/handlers/template';\nimport handlerAdminLogin from './lib/handlers/adminLogin';\nimport handlerAdminLogout from './lib/handlers/adminLogout';\nimport handlerAdminCarAdd from './lib/handlers/carAdd';\nimport handlerAdminCarSearch from './lib/handlers/carSearch';\nimport handlerAdminCarEdit from './lib/handlers/carEdit';\nimport handlerError from '../lib/handlers/error';\n\n/**\n * Main function to handle incoming admin requests.\n * \n * @param {Request} request - The incoming request object.\n * @return {Response} The response object generated by the appropriate handler.\n */\nconst indexAdmin = async (request) => {\n  const url = new URL(request.url);\n  \n  // Handling GET requests\n  if (request.method === 'GET') {\n    switch (url.pathname) {\n      case '/admin': \n      case '/admin/add-car':\n      case '/admin/search-car':\n        return await handlerTemplate(request);\n      case '/admin/logout':\n        return handlerAdminLogout(request);\n      \n      default: return handlerError(404, 'GET: Not Found');\n    }\n  }\n\n  // Handling POST requests\n  if (request.method === 'POST') {\n    switch (url.pathname) {\n      case '/admin': \n        return handlerAdminLogin(request);\n      case '/admin/add-car': \n        return handlerAdminCarAdd(request);\n      case '/admin/search-car': \n        return handlerAdminCarSearch(request);\n      case '/admin/edit-car': \n        return handlerAdminCarEdit(request);\n      \n      default: return handlerError(404, 'POST: Not Found');\n    }\n  }\n\n  // If none of the above methods match, return method not allowed\n  return handlerError(405,'Method not allowed');\n}\nexport default indexAdmin;", "/**\n * robotsTxt.js\n * \n * This module generates a robots.txt file for the application.\n * The robots.txt file is used to instruct web crawling robots about which pages to crawl or not to crawl.\n * Currently, this module allows all user-agents to access all parts of the site and points them \n * to the location of the sitemap for more detailed crawl instructions.\n */\n\n/**\n * Generate and return a Response object containing the content of robots.txt.\n * \n * @param {URL} url - The URL object representing the current request.\n * @returns {Response} - A Response object with the content of robots.txt.\n */\nconst apiRobotsTxt = (url) => {\n  return new Response(robotstxtcontent(url), {status: 200});\n}\nexport default apiRobotsTxt;\n\n/**\n * Generate the content for the robots.txt file.\n * \n * @param {URL} url - The URL object representing the current request.\n * @returns {string} - The content of the robots.txt file.\n */\nconst robotstxtcontent = (url) => `\n# Hello!\nuser-agent: *\nallow: /\n\nsitemap: ${url.protocol}//${url.host}/sitemap.xml\n`;\n", "/**\n * manifest.js\n * \n * This module generates a manifest.json file for the application.\n * The manifest.json file is used for the PWA\n */\n\n/**\n * Generate and return a Response object containing the content of robots.txt.\n * \n * @returns {Response} - A Response object with the content of manifest.json.\n */\nconst apiManifest = () => {\n  return new Response(content, {status: 200, headers:{'content-type':'application/json'}});\n}\nexport default apiManifest;\n\n/**\n * Generate the content for the manifest.json file.\n * \n * @returns {string} - The content of the manifest.json file.\n */\nconst content = `{\n  \"name\": \"Tiny Fords\",\n  \"short_name\": \"TinyFords\",\n  \"theme_color\": \"rgb(0, 84, 144)\",\n  \"background_color\": \"rgb(0, 84, 144)\",\n  \"display\": \"standalone\",\n  \"start_url\": \"/\",\n  \"id\": \"/\",\n  \"shortcuts\": [\n    {\n      \"name\": \"Hot Wheels\",\n      \"url\": \"/hotwheels\",\n      \"icons\": [\n        {\n          \"src\": \"/images/icons/hot-wheels-96x96.png\",\n          \"sizes\": \"96x96\",\n          \"type\": \"image/png\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Matchbox\",\n      \"url\": \"/matchbox\",\n      \"icons\": [\n        {\n          \"src\": \"/images/icons/matchbox-96x96.png\",\n          \"sizes\": \"96x96\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Other\",\n      \"url\": \"/other\",\n      \"icons\": [\n        {\n          \"src\": \"/images/icons/all-96x96.png\",\n          \"sizes\": \"96x96\"\n        }\n      ]\n    },\n    {\n      \"name\": \"All\",\n      \"url\": \"/all\",\n      \"icons\": [\n        {\n          \"src\": \"/images/icons/all-96x96.png\",\n          \"sizes\": \"96x96\"\n        }\n      ]\n    }\n  ],\n  \"icons\": [\n    {\n      \"src\": \"/images/icons/android-icon-36x36.png\",\n      \"sizes\": \"36x36\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"/images/icons/android-icon-48x48.png\",\n      \"sizes\": \"48x48\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"/images/icons/android-icon-72x72.png\",\n      \"sizes\": \"72x72\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"/images/icons/android-icon-96x96.png\",\n      \"sizes\": \"96x96\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"/images/icons/android-icon-144x144.png\",\n      \"sizes\": \"144x144\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"/images/icons/android-icon-192x192.png\",\n      \"sizes\": \"192x192\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"/images/icons/icon-512x512.png\",\n      \"sizes\": \"512x512\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-48x48.png\",\n      \"sizes\": \"48x48\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-72x72.png\",\n      \"sizes\": \"72x72\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-96x96.png\",\n      \"sizes\": \"96x96\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-128x128.png\",\n      \"sizes\": \"128x128\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-192x192.png\",\n      \"sizes\": \"192x192\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-384x384.png\",\n      \"sizes\": \"384x384\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-512x512.png\",\n      \"sizes\": \"512x512\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    },\n    {\n      \"src\": \"/images/icons/maskable-icon-1024x1024.png\",\n      \"sizes\": \"1024x1024\",\n      \"type\": \"image/png\",\n      \"purpose\": \"maskable\"\n    }\n  ]\n}`;\n", "export default __5d2b6670b7a20b48d407323ea9471fa05579d093_entry_pwa_js;", "/**\n * helpersRenders.js\n * \n * Document with all the different helpers to aid in rendering.\n * Used by the templates.\n * \n */\n\nexport const assembleHTML = (strings) => strings.join('');\n\nexport const assignClassName = (className) => className ? `class=\"${className}\"` : '';", "/**\n * gridCars.js\n * \n * This module provides functions to create a grid layout for cars. \n * The grid displays information about each car in a card format.\n */\n\nimport { assignClassName, assembleHTML } from '../utils/helpersRenders';\n\n/**\n * Create an HTML grid of cars with a heading.\n * \n * @param {string} heading - The main heading for the grid.\n * @param {number|string} headingLevel - The heading level (e.g., 1 for h1, 2 for h2). Defaults to h2 if invalid.\n * @param {Array} dataCars - The list of car data objects to display in the grid.\n * @returns {string} - The constructed grid as an HTML string.\n */\nconst fragmentGridCars = (data) => {\n  const html = ['<section>'];\n  if(data.heading){\n    const heading = {\n      element: data.heading.element || 'h2',\n      content: data.heading.content || 'Results',\n      className: assignClassName(data.heading.attributes?.className),\n    }\n    html.push(`<${heading.element} ${heading.className}>${heading.content}</${heading.element}>`);\n\n    html.push(createGrid(data.data));\n  }\n  html.push('</section>');\n  return assembleHTML(html);\n\n\n}\nexport default fragmentGridCars;\n\n/**\n * Generate the HTML for the grid of cars.\n * \n * @param {Array} dataCars - The list of car data objects to display in the grid.\n * @returns {string} - The HTML for the grid.\n */\nconst createGrid = (content) => {\n\n  const cards = content.map(createCard).join('');\n\n  const html = `<div class=\"fragmentCarsGrid\">\n    ${cards}\n  </div>`;\n\n  return html;\n}\n\n/**\n * Generate the HTML for a single car card in the grid.\n * \n * @param {Object} car - The car data object.\n * @returns {string} - The HTML for the car card.\n */\nconst createCard = (car) => {\n\n  const imageUrl = createImgPath(car);\n\n  return `\n    <div class=\"fragmentGridCard\">\n      <img src=\"${imageUrl}\" height=\"150\" width=\"150\" alt=\"${car.brand} ${car.name} ${car.code ? `- ${car.code}` : ''}\" loading=\"lazy\">\n      <ul class=\"fragmentGridCardContent\">\n        <li><h3>${car.name}</h3></li>\n        <li><strong>Make:</strong> ${car.make}</li>\n        ${car.code ? `<li><strong>Code:</strong> ${car.code.toUpperCase()}</li>` : ''}\n        <li><strong>Added:</strong> ${car.addedDetails.date}</li>\n      </ul>\n    </div>`;\n}\n\n/**\n * Check if the car has a photo\n * If not, use a placeholder\n * If yes, display photo\n * \n * @param {Object} car - The car data object.\n * @returns {string} - image path\n */\nexport const createImgPath = (car) => {\n  const baseFolder = `/images/${car.categoryDetails.folder}/front-250/`;\n  const postfix = `-front-250.jpg`;\n\n  let imagePath;\n\n  if (car.hasPhoto) {\n    if (car.categoryDetails.id === 'ot') {\n      imagePath = `${car.categoryDetails.id}-${car.id}`;\n    } else {\n      imagePath = `${car.categoryDetails.id}-${car.code}`;\n    }\n  } else {\n    imagePath = 'coming-soon';\n  }\n\n  return `${baseFolder}${imagePath}${postfix}`;\n}", "import pwaSw from '../csr-js/pwa/entry-pwa.js';\nimport { appData, apiAppData } from '../services/appData';\nimport { getCarsByCategoryId} from '../utils/dataCars.js';\nimport { ITEMS_PER_PAGE } from '../services/init.js';\nimport { createImgPath } from '../fragments/gridCars.js';\n\nconst apiSw = async (url) => {\n  const cacheData = await buildPageCache(url);\n  const carImageUrls = buildCarImageCache();\n  // const carImageUrls = ['/images/hotwheels/front-250/hw-grn84-front-250.jpg','/images/hotwheels/front-250/coming-soon-front-250.jpg'];\n  const pageImages = extractImageUrls(appData.pages.all);\n  const allUrlsToCache = [...carImageUrls, ...pageImages, ...cacheData, ...carImageUrls];\n  const uniqueUrlsToCache = [...new Set(allUrlsToCache)];\n\n  const urlsToCacheString = `const urlsToCache = ${JSON.stringify(uniqueUrlsToCache)};`;\n\n  const swCode = [\n    urlsToCacheString,\n    init,\n  ].join('');\n\n  return new Response(swCode, {status: 200, headers:{'content-type':'application/javascript'}});\n}\nexport default apiSw;\n\nconst buildPageCache = async (url) => {\n  await apiAppData();\n  const data = appData.pages.all;\n  url = new URL(url);\n  \n  const slugsPromises = data\n    .filter(page => page.visibility && page.visibility.active === true)\n    .flatMap(page => {  // Use flatMap to flatten the returned arrays\n      if (page.template === 'collection') {\n        const carCount = getCarsByCategoryId(page.id).length || appData.cars.all.length;\n        return generatePagedSlugs(page.slug, carCount, ITEMS_PER_PAGE.collection);\n      } else {\n        return [page.slug];  // For non-collection pages, wrap the slug in an array\n      }\n    });\n\n  const slugs = slugsPromises;\n\n  return slugs;\n}\n\nconst init = pwaSw;\n\nconst generatePagedSlugs = (slug, carCount, itemsPerPage) => {\n  const totalPages = Math.ceil(carCount / itemsPerPage);\n  const slugs = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    if (i === 1) {\n      slugs.push(`${slug}`);\n    } else {\n      slugs.push(`${slug}?page=${i}`);\n    }\n  }\n\n  return slugs;\n}\n\nconst buildCarImageCache = () => {\n  return appData.cars.all.map(car => createImgPath(car));\n}\n\nconst extractImageUrls = (obj, urls = []) => {\n  // Base case: if the object is not an object or array, return\n  if (typeof obj !== 'object' || obj === null) {\n    return urls;\n  }\n\n  // Check each property of the object\n  for (let key in obj) {\n    if (typeof obj[key] === 'string' && obj[key].endsWith('.jpg')) {\n      urls.push(obj[key]);\n    } else if (typeof obj[key] === 'object') {\n      extractImageUrls(obj[key], urls);\n    }\n  }\n\n  return urls;\n}", "/**\n * xmlSitemap.js\n * \n * This module generates a manifest.json file for the application.\n * The manifest.json file is used for the PWA\n */\n\n// Import dependencies\nimport { servicesGithubDataPageAll } from '../services/github';\n\n/**\n * Generate and return a Response object containing the content of the XML sitemap.\n * \n * @returns {Response} - A Response object with the content of sitemap.xml.\n */\nconst apiXmlSitemap = async (url) => {\n  const dataPagesAll = await servicesGithubDataPageAll();\n  return new Response(content(dataPagesAll, url), {status: 200, headers:{'content-type':'application/xml'}});\n}\nexport default apiXmlSitemap;\n\n/**\n * Generate the content for the sitemap.xml file.\n * \n * @param {Array} data - The list of all pages.\n * @returns {string} - The content of the sitemap.xml file.\n */\nconst content = (data, url) => {\n  const entries = data\n    .filter(entry => entry.xmlSitemap)\n    .map(entry => `<url><loc>${url.origin}${entry.slug}</loc></url>`)\n    .join('');\n\n\n  const sections = [\n    `<?xml version=\"1.0\" encoding=\"utf-8\"?>`,\n    `<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">`,\n    entries,\n    `</urlset>`\n  ].join('');\n  return sections;\n\n};\n", "/**\n * manifest.js\n * \n * This module generates various JSON outputs for the application based on the request URL.\n * One example is the manifest.json file used for PWAs. Additionally, this can output car data in JSON format.\n */\n\n// Import necessary services\nimport { servicesGithubDataCarsAll } from '../services/github';\nimport { servicesGithubDataPageAll } from '../services/github';\n\n/**\n * Generate and return a Response object containing JSON content based on the URL.\n * \n * @param {URL} url - The request URL to determine the type of JSON content required.\n * @returns {Response} - A Response object with the required JSON content.\n */\nconst apiJson = (url) => {\n  // Extract the type of JSON content needed from the URL\n  const type = url.pathname.replace('/json/', '');\n\n  // Depending on the type, fetch the necessary data and return\n  switch (type){\n    case 'cars': \n      return getData(servicesGithubDataCarsAll);\n    case 'pages':\n      return getData(servicesGithubDataPageAll);\n    default:\n      return new Response('Not Found', {status: 404, headers: {'content-type':'text/plain'}});\n  }\n}\nexport default apiJson;\n\n/**\n * Fetch and return the desired data in a Response object.\n * \n * @param {Function} func - The service function to call and fetch data.\n * @returns {Response} - A Response object with the fetched data in JSON format.\n */\nconst getData = async (func) => {\n  const data = await func();\n  return new Response(JSON.stringify(data), {status: 200, headers: {'content-type':'application/json', 'x-robots-tag':'noindex'}});\n}\n", "import { appData, apiAppData } from '../services/appData';\nimport handleError from '../handlers/error';\nimport { assembleHTML } from '../utils/helpersRenders';\n\nconst apiCreator = async (url) => {\n  await apiAppData();\n  switch(url.pathname){\n    case '/api/cars': return new Response(apiCars(), {status: 200, headers: {'content-type':'text/html', 'x-robots-tag':'noindex'}});\n    case '/api/cases': return new Response(apiCases(), {status: 200, headers: {'content-type':'text/html', 'x-robots-tag':'noindex'}});\n    default: return handleError(403, 'Not allowed');\n  }\n}\nexport default apiCreator;\n\nconst apiCars = () => {\n  const headers = [\n    'Name',\n    'Make',\n    'Brand',\n    'Code'\n  ];\n\n  const data = [ ...appData.cars.all];\n\n  return createTable(headers, data);\n}\n\nconst apiCases = () => {\n\n  const allCars = [ ...appData.cars.all];\n\n  const cases = {\n    long: {\n      name: 'Long card',\n      has: 0,\n      hasNot: 0\n    },\n    short: {\n      name: 'Short card',\n      has: 0,\n      hasNot: 0\n    },\n    premium: {\n      name: 'Premium',\n      has: 0,\n      hasNot: 0\n    },\n    transport: {\n      name: 'Team Transport',\n      has: 0,\n      hasNot: 0\n    }\n  }\n\n  allCars.forEach(car => {\n    const caseId = car.caseDetails.id;\n    if(cases[caseId]) {\n      cases[caseId][car.caseDetails.status ? 'has' : 'hasNot'] += 1;\n    }\n  });\n\n  const headers = [\n    'Type',\n    'In case',\n    'Not in case'\n  ];\n\n  const data = Object.entries(cases).map(([key, value]) => {\n    return {\n      [headers[0].toLowerCase()]: value.name, // 'Type': 'Long card'\n      [headers[1].toLowerCase()]: value.has, // 'In case': 47\n      [headers[2].toLowerCase()]: value.hasNot, // 'Not in case': 42\n    };\n  });\n  return createTable(headers, data);\n\n}\n\nconst createTable = (headers, data) => {\n  const html = [openHtml];\n  html.push('<table>');\n  html.push('<thead>');\n  html.push('<tr>');\n  headers.forEach((head) => {\n    html.push(`<th>${head}</th>`);\n  });\n  html.push('</tr>');\n  html.push('</thead>');\n  html.push('<tbody>');\n  data.forEach((entry) => {\n    html.push('<tr>');\n    headers.forEach((head) => {\n      html.push(`<td>${entry[head.toLowerCase()]}</td>`);\n    });\n    html.push('</tr>');\n  });\n  html.push('</tbody>');\n  html.push('</table>');\n  html.push(closeHtml);\n  return assembleHTML(html);\n}\n\nconst openHtml = `<!doctype html><html lang=\"en\"><head><title>Collection table</title></head><body>`;\nconst closeHtml = `</body></html>`;", "/**\n * static.js\n * \n * This module provides functions to handle requests for static assets such as images and fonts. \n * It routes the requests based on their pathnames.\n */\n\n// Import necessary modules and utilities.\nimport apiRobotsTxt from '../api/robotsTxt';\nimport apiManifest from '../api/manifest';\nimport apiSw from '../api/sw';\nimport apiXmlSitemap from '../api/sitemap';\nimport apiJson from '../api/outputJson';\nimport apiCreator from '../api/api';\nimport { servicesGithubImageGetter } from '../services/github';\nimport handlerError from './error';\n\nconst STATIC_CACHE_TIME = 30 * 24 * 60 * 60 * 1000;\n\n/**\n * Handle requests for static assets.\n * \n * @param {URL} url - The request URL object.\n * @returns {Response} - The response object.\n */\nconst handleStatic = (url, request = {}) => {\n\n  // Handle image requests.\n  if (url.pathname.startsWith('/images/')) {\n    return imageRouter(url);\n  }\n\n  // Handle font requests.\n  if (url.pathname.startsWith('/fonts/')) {\n    return routerFonts(url);\n  }\n\n  // Handle JSON\n  if (url.pathname.startsWith('/json/')) {\n    return apiJson(url);\n  }\n\n    // Handle API\n    if (url.pathname.startsWith('/api/')) {\n      return apiCreator(url);\n    }\n\n  // Handle specific paths.\n  switch (url.pathname) {\n    case '/favicon.ico':\n      url.pathname = `/images/icons${url.pathname}`;\n      return imageRouter(url);\n\n    case '/robots.txt':\n      return apiRobotsTxt(url);\n\n    case '/manifest.json':\n      return apiManifest();\n\n    case '/sitemap.xml':\n      return apiXmlSitemap(url);\n\n    case '/service-worker.js':\n      return apiSw(url);\n\n    default:\n      return new Response('Not Found - static', { status: 404 });\n  }\n}\nexport default handleStatic;\n\n/**\n * Route requests for fonts to their appropriate location.\n * \n * @param {URL} url - The request URL object.\n * @returns {Promise<Response>} - The response object.\n */\nconst routerFonts = async (url) => {\n  try{\n    const newUrl = new URL(url);\n    newUrl.protocol = 'https:';\n    newUrl.host = 'fonts.gstatic.com';\n    newUrl.port = '';\n    newUrl.pathname = `${newUrl.pathname.replace('/fonts/', '')}`;\n\n    let response = await fetch(newUrl.toString(), {\n      cf: {\n        cacheTtl: STATIC_CACHE_TIME,\n        cacheEverything: true,\n        cacheKey: newUrl.toString()\n      }\n    });\n\n    response = new Response(response.body, response);\n\n    if (!response.ok) {\n      throw new Error(`Error fetching font: ${response.statusText}`);\n    }\n\n    response.headers.set('Cache-Control', `public, max-age=${STATIC_CACHE_TIME}`);\n\n    return response;\n\n  }catch (error){\n    return handlerError(404, `Font not found: ${error}`)\n  }\n}\n\n/**\n * Route requests for images and retrieve them from GitHub.\n * \n * @param {URL} url - The request URL object.\n * @returns {Promise<Response>} - The response object with the image.\n */\nconst imageRouter = async (url) => {\n  try {\n    const { headers, data } = await servicesGithubImageGetter(url.pathname);\n    const response = new Response(data, {\n      headers: {\n        'Content-Type': determineContentType(url),\n        'Cache-Control': `public, max-age=${STATIC_CACHE_TIME}`,\n        'Etag': headers.etag\n      },\n      cf: {\n        cacheTtl: STATIC_CACHE_TIME,\n        cacheEverything: true,\n        cacheKey: url.toString()\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error fetching image: ${response.statusText}`);\n    }\n\n    return response;\n  } catch (error) {\n      return handlerError(404, `Image not found: ${error}`)\n  }\n}\n\nconst determineContentType = (url) => {\n  const fileExtension = url.pathname.split('.').pop().toLowerCase();\n  const mimeTypes = {\n    'jpg': 'image/jpeg',\n    'jpeg': 'image/jpeg',\n    'png': 'image/png',\n    'gif': 'image/gif',\n    'webp': 'image/webp'\n    // ... add other extensions and MIME types as needed\n  };\n\n  return mimeTypes[fileExtension] || 'application/octet-stream';\n}\n", "export default __0ff69fd4e0fb5e10ed95541d44101c301a44586a_styles_css;", "/**\n * documentHead.js\n * \n * This module exports a function that generates the opening part of an HTML document.\n * This includes the DOCTYPE declaration, opening HTML and BODY tags, and the HEAD contents.\n * The HEAD contains meta information, links to stylesheets, scripts, and other resources.\n */\n\n// Importing the styles\nimport css from '../css/styles.css';\nimport { appData } from '../services/appData';\n\n/**\n * Generates the opening HTML markup for the page.\n * \n * @param {Object} data - All the cars and pages (current and all) data\n * @return {string} The opening HTML markup.\n */\nconst documentHead = (data = appData) => {\n  const { pages: { current } } = data;\n\n  // Construct the HTML markup\n  const html = `<!doctype html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n        <style>\n          ${css}\n        </style>\n        <title>${current.metadata.title}</title>\n        <meta property=\"og:locale\" content=\"en_GB\">\n        <meta property=\"og:type\" content=\"website\">\n        <meta property=\"og:site_name\" content=\"Tiny Fords\">\n        ${current.status===200 && current.template!=='offline' && current.template!=='admin'? \n          `<meta name=\"description\" content=\"${current.metadata.description}\">\n          <link rel=\"canonical\" href=\"${current.canonical}\">\n          <meta property=\"og:title\" content=\"${current.socialMedia.title}\">\n          <meta property=\"og:description\" content=\"${current.socialMedia.description}\">\n          <meta property=\"og:url\" content=\"${current.canonical}\">\n          <meta property=\"og:image\" content=\"${current.url.protocol}//${current.url.host}/images/social-media/4080-2142/${current.socialMedia.image}-4080-2142.jpg\">\n          <meta property=\"og:image:width\" content=\"4080\">\n          <meta property=\"og:image:height\" content=\"2142\">\n          <meta property=\"og:image:type\" content=\"image/jpeg\">\n\n          <meta property=\"og:image\" content=\"${current.url.protocol}//${current.url.host}/images/social-media/256/${current.socialMedia.image}-256.jpg\">\n          <meta property=\"og:image:width\" content=\"256\">\n          <meta property=\"og:image:height\" content=\"256\">\n          <meta property=\"og:image:type\" content=\"image/jpeg\">\n\n          <meta name=\"twitter:card\" content=\"summary_large_image\">\n          <meta name=\"twitter:creator\" content=\"@kevin_ellen_\">\n          <meta name=\"twitter:title\" content=\"${current.socialMedia.title}\">\n          <meta name=\"twitter:description\" content=\"${current.socialMedia.description}\">\n          <meta name=\"twitter:image\" content=\"${current.url.protocol}//${current.url.host}/images/social-media/4080-2142/${current.socialMedia.imageName}-4080-2142.jpg\">\n          ` \n        : ''}\n        <link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"/images/icons/apple-icon-57x57.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"/images/icons/apple-icon-60x60.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"/images/icons/apple-icon-72x72.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"/images/icons/apple-icon-76x76.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"/images/icons/apple-icon-114x114.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"/images/icons/apple-icon-120x120.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"//iconsapple-icon-144x144.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/images/icons/apple-icon-152x152.png\">\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/images/icons/apple-icon-180x180.png\">\n        <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/images/icons/android-icon-192x192.png\">\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/images/icons/favicon-32x32.png\">\n        <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/images/icons/favicon-96x96.png\">\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/images/icons/favicon-16x16.png\">\n        <link rel=\"manifest\" href=\"/manifest.json\">\n        <meta name=\"msapplication-TileColor\" content=\"#005490\">\n        <meta name=\"msapplication-TileImage\" content=\"/icons/ms-icon-144x144.png\">\n        <meta name=\"theme-color\" content=\"#005490\">\n      </head>\n      <body>`;\n\n  return html;\n}\nexport default documentHead;", "export default __864ce3fc4c03bd3553d2c1bfcebdb4b57393d0a8_init_spa_js;", "export default __b69dad786934954e047bb86c036e042e343bf608_navigation_spa_js;", "export default __c816affb52573c417020ac1087b27c39cc355574_appstate_spa_js;", "export default __964b05abc6ae215eb1b1ec66020f594020a14e77_template_spa_js;", "export default __19869fb12348258eefd8ea4d591e7d778aa5fc14_search_spa_js;", "export default __2ec6b9dc0c9ba12c9738470af5e885ff339a976d_createPagination_spa_js;", "export default __4f9fc078246d4d4505d9b3da1ca80bdca95e8b35_updateHeadings_spa_js;", "export default __25edf53458fff2fbf41bdc0dfbcc655f7b339b13_createGrid_spa_js;", "export default __658b77f0e383d176cff295a46183814cc795c7b1_createBreadcrumbs_spa_js;", "export default __7aff8754c106f3ed589f3d6efb70c6d0869241cd_renderHome_spa_js;", "export default __448c5cae7d1d1a972bd0585ae91ecef90a0394a0_renderCollection_spa_js;", "export default __f7efc433bf9264515ad917dd458decb51a2a053b_renderContent_spa_js;", "export default __ddc7c442650592a13fba18a4701302d1dc378707_renderCommentItems_spa_js;", "export default __7974a5b9edb561ebcf8a2fd9f36e3839dd390c87_tools_spa_js;", "export default __beeeee6822f45416f30d52faf09ef56228c3cd97_init_pwa_js;", "/**\n * documentEnd.js\n * \n * This module exports a function that generates the closing part of an HTML document.\n * It closes the body and html tags that were opened in the beginning of the document.\n */\n\nimport spaInit from '../csr-js/spa/init/init-spa.js';\n\nimport spaNavigateHandler from '../csr-js/spa/handlers/navigation-spa.js';\nimport spaAppState from '../csr-js/spa/handlers/appstate-spa.js';\nimport spaTemplateHandler from '../csr-js/spa/handlers/template-spa.js';\nimport spaSearchHandler from '../csr-js/spa/handlers/search-spa.js';\n\nimport spaCreatePagination from '../csr-js/spa/ui/createPagination-spa.js';\nimport spaUpdateHeadings from '../csr-js/spa/ui/updateHeadings-spa.js';\nimport spaCreateGrid from '../csr-js/spa/ui/createGrid-spa.js';\nimport spaCreateBreadcrumbs from '../csr-js/spa/ui/createBreadcrumbs-spa.js';\n\nimport spaHomeRender from '../csr-js/spa/ui/renderHome-spa.js';\nimport spaCollectionRender from '../csr-js/spa/ui/renderCollection-spa.js';\nimport spaContentRender from '../csr-js/spa/ui/renderContent-spa.js';\nimport spaCommonItemsRender from '../csr-js/spa/ui/renderCommentItems-spa.js';\n\nimport spaTools from '../csr-js/spa/tools/tools-spa.js';\n\nimport pwaInit from '../csr-js/pwa/init-pwa.js';\n\nimport { appData } from '../services/appData.js';\n\n\n\n/**\n * Generates the closing HTML markup for the page.\n * \n * @param {Object} data - All the cars and pages data\n * @return {string} The closing HTML markup.\n */\n\n\n\n\nconst documentEnd = (data = appData) => {\n  // The closing tags for body and html\n  const html = `\n        ${templateGrid()}\n        <script>\n          window.__APP_STATE__ = ${JSON.stringify(appData)};\n        </script>\n        <script>\n          \n          ${spaTools}\n          ${spaAppState}\n\n          ${spaCreatePagination}\n          ${spaUpdateHeadings}\n          ${spaCreateGrid}\n          ${spaCreateBreadcrumbs}\n          \n          ${spaHomeRender}\n          ${spaCollectionRender}\n          ${spaContentRender}\n          ${spaCommonItemsRender}\n          \n          ${spaTemplateHandler}\n          ${spaSearchHandler}\n          ${spaNavigateHandler}\n          ${spaInit}\n        \n        </script>\n        <script>\n          ${pwaInit}\n        </script>\n      </body>\n    </html>\n  `;\n\n  return html;\n}\nexport default documentEnd;\n\n\nconst templateGrid = () => {\n  return `<template id=\"gridItem\">\n    <div class=\"fragmentGridCard\">\n      <img height=\"150\" width=\"150\" loading=\"lazy\" class=\"templateGridImage\">\n      <ul class=\"fragmentGridCardContent\">\n        <li><h3></h3></li>\n        <li class=\"templateGridMake\"><strong>Make:</strong> <span></span></li>\n        <li class=\"templateGridCode\"><strong>Code:</strong> <span></span></li>\n        <li class=\"templateGridAdded\"><strong>Added:</strong> <span></span></li>\n      </ul>\n    </div>\n  </template>`;\n}", "/**\n * searchBar.js\n * \n * This module provides the searchBar that is used in pageHead and on collection pages.\n * The URL provided should be the collection page slug.\n */\n\nimport { appData } from '../services/appData';\n\n/**\n * Generates the HTML for the head section based on the given data.\n * \n * @param {String} url - The URL that should be aligned with the active collection\n * @return {string} - The HTML markup for the search bar section.\n */\nconst fragmentSearchBar = (url = appData.pages.current.url.pathname, data = appData) => {\n  let value = null;\n  if (data.search?.success && data.search?.action === 'search') {\n    value = data.search.searchValue;\n  }\n  const html = `<div class=\"siteSearch\">\n    <form class=\"searchBar\" action=\"${url}\" method=\"post\">\n      <input type=\"search\" required placeholder=\"Search query\" autocomplete=\"off\" name=\"q\" ${value ? `value=\"${value}\"` : ''}>\n        <button type=\"submit\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352c79.5 0 144-64.5 144-144s-64.5-144-144-144S64 128.5 64 208s64.5 144 144 144z\"></path></svg>\n          <span class=\"a11y\">Search</span>\n        </button>\n    </form>\n  </div>`;\n  return html;\n}\nexport default fragmentSearchBar;", "/**\n * pageHead.js\n * \n * This module provides the function to generate the head section of a webpage.\n * The head section typically contains meta tags, links, and other necessary data that is placed within the <head> tags.\n */\n\n// Import modules\nimport fragmentSearchBar from '../fragments/searchBar';\nimport { appData } from '../services/appData';\n\n/**\n * Generates the HTML for the head section based on the given data.\n * \n * @param {Object} data - all the cars and pages data\n * @return {string} The HTML markup for the head section.\n */\nconst pageHead =  (data = appData)  => {\n\n  // Generate the links that should appear in the head section based on certain criteria.\n  const links = createLinks(data.pages.all);\n\n  const siteSearchUrl = {...data.pages.current.url};\n  siteSearchUrl.pathname = '/all';\n\n  // Construct the full HTML for the head section.\n  const html = `<header class=\"siteHeader\">\n    <div class=\"siteHeaderContainer\">\n\n      <label class=\"siteNavLabel\" for=\"siteNavBox\">\n        <svg viewBox=\"0 0 100 80\" width=\"25\" height=\"25\">\n          <rect width=\"100\" height=\"20\" rx=\"10\"></rect>\n          <rect y=\"30\" width=\"100\" height=\"20\" rx=\"10\"></rect>\n          <rect y=\"60\" width=\"100\" height=\"20\" rx=\"10\"></rect>\n        </svg>\n        <span class=\"a11y\">Open main menu</span>\n      </label>\n\n      <p class=\"siteNavName\"><a href=\"/\">Tiny Fords</a></p>\n\n      <div class=\"siteNavRight\">\n        <label class=\"siteNavLabel\" for=\"siteSearch\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"25\" height=\"25\">\n            <path d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352c79.5 0 144-64.5 144-144s-64.5-144-144-144S64 128.5 64 208s64.5 144 144 144z\"></path>\n          </svg>\n          <span class=\"a11y\">Open search box</span>\n        </label>\n      </div>\n\n      <input type=\"checkbox\" class=\"siteNavBox\" id=\"siteNavBox\">\n      <nav class=\"siteNavMenu\" aria-label=\"Main menu\">\n        <ul class=\"mainMenu\">\n          ${links}\n        </ul>\n      </nav>\n\n      <input type=\"checkbox\" class=\"siteNavBox\" id=\"siteSearch\">\n      ${fragmentSearchBar(siteSearchUrl.pathname, data.options)}\n\n    </div>\n  </header>\n  <div id=\"pageContent\">`;\n  return html;\n}\nexport default pageHead;\n\n/**\n * Generates the HTML links that will be included in the footer.\n * \n * @param {Array} data - Array containing data for all pages.\n * @return {string} The HTML markup for the footer links.\n */\nconst createLinks = (data) => {\n  \n  // Filter the pages that should appear in the footer based on certain criteria\n  // and then map them to HTML links.\n  const entries = data.filter(page => \n    page.status === 200 \n    && page.visibility.active === true \n    && page.visibility.mainNav === true)\n  .map(page => `<li><a href=\"${page.slug}\">${page.name}</a></li><li aria-hidden=\"true\" class=\"divider\">/</li>`)\n  .join('');\n  \n  return entries;\n}", "/**\n * pageBreadcrumbs.js\n * \n * This module provides functions to generate breadcrumb navigation for web pages.\n * Breadcrumbs are hierarchical links that allow users to navigate back to previous pages or sections.\n */\n\nimport { appData } from \"../services/appData\";\n\n/**\n * Generates the HTML for the breadcrumb navigation based on the given data.\n * \n * @param {Object} dataPageCurrent - Data specific to the current page.\n * @param {Object} dataPageAll - Data that is common to all pages.\n * @return {string} The HTML markup for the breadcrumb navigation.\n */\nconst pageBreadcrumbs = (data = appData) => {\n  // If there's no breadcrumb data for the current page, return an empty breadcrumb container.\n  if (!data.pages.current.breadcrumbList) {\n    return `<nav class=\"breadcrumbsContainer\" aria-label=\"breadcrumb\"></nav>`;\n  }\n\n  // Construct the full HTML for the breadcrumb navigation\n  const html = `\n      <nav class=\"breadcrumbsContainer\" aria-label=\"breadcrumb\">\n        <ul class=\"breadcrumbs\">\n          ${createBreadcrumbs(data.breadcrumbs)}\n        </ul>\n      </nav>\n  `;\n\n  return html;\n}\nexport default pageBreadcrumbs;\n\n/**\n * Generates the breadcrumb entries based on the given data.\n * \n * @param {Array} data - An array of breadcrumb objects.\n * @return {string} The HTML markup for the breadcrumb entries.\n */\nconst createBreadcrumbs = (data) => {\n  return data.map((obj, index, arr) => {\n    const isLastItem = index === arr.length - 1;\n    const content = isLastItem ? `${obj.name}` : `<a href=\"${obj.slug}\">${obj.name}</a>`;\n    return `\n      <li ${isLastItem ? 'class=\"lastItem\" aria-current=\"page\"' : ''}>\n        ${content}\n      </li>\n      ${isLastItem ? '' : `<li aria-hidden=\"true\">/</li>`}\n    `;\n  }).join('');\n}", "/**\n * pageFooter.js\n * \n * This module provides the function to generate the footer section of a webpage.\n * The footer typically contains links and other information that is displayed at the bottom of web pages.\n */\n\nimport { appData } from \"../services/appData\";\n\n/**\n * Generates the HTML for the footer section based on the given data.\n * \n * @param {Object} dataPageCurrent - Data specific to the current page.\n * @param {Array} dataPageAll - Array containing data for all pages.\n * @return {string} The HTML markup for the footer section.\n */\nconst pageFooter = (data = appData) => {\n  \n  // Generate the links that should appear in the footer.\n  const links = createLinks(data.pages.all);\n  \n  // Construct the full HTML for the footer section\n  return(`\n    </div>\n    <footer class=\"siteFooter\">\n      <ul class=\"siteFooterLinks\">\n        ${links}\n      </ul>\n      <h2>Thanks for visiting Tiny Fords</h2>\n      <p>Here at Tiny Fords, we're passionate about Ford die-cast cars, and we're thrilled to share our collection with you. This non-commercial site is a labor of love, created by Kevin to keep track of his collection and avoid buying duplicates. We're proud to say it was made in 2023, using a Cloudflare Worker on a free account. We hope you've enjoyed exploring our collection and we look forward to your next visit! Don't forget to check out the contact page if you have any question or feedback.</p>\n    </footer>\n  `);\n}\nexport default pageFooter;\n\n/**\n * Generates the HTML links that will be included in the footer.\n * \n * @param {Array} data - Array containing data for all pages.\n * @return {string} The HTML markup for the footer links.\n */\nconst createLinks = (data) => {\n  \n  // Define link categories and their corresponding slugs\n  const categories = {\n    'Collections': ['/hotwheels', '/matchbox', '/other', '/all'],\n    'About': ['/about', '/about/how-to-find-toy-number', '/about/klas-car-keepers'] // Add '/about/klas-protectors' if it's part of your data\n  };\n\n  // Process each category and generate HTML for its links\n  const entries = Object.entries(categories).map(([categoryName, slugs]) => {\n    const links = data.filter(page => {\n      // Check if visibility property exists on the page object\n      if (!page.visibility) {\n        console.error('Visibility property missing on page: ', page);\n        return false; // skip this page\n      }\n      \n      return page.status === 200 \n        && page.visibility.active === true \n        && page.visibility.footer === true \n        && slugs.includes(page.slug);\n    })\n    .map(page => `<li><a href=\"${page.slug}\">${page.name}</a></li><li aria-hidden=\"true\">/</li>`)\n    .join('');\n\n    return `<li>${categoryName} <span> > </span><ul>${links}</ul></li>`;\n  }).join('');\n\n  // Return the Home link along with other categories\n  return `<li><a href=\"/\">Home</a></li>${entries}`;\n}", "import { assignClassName, assembleHTML } from '../utils/helpersRenders';\nimport { appData } from '../services/appData';\n\nexport const createIntroTemplate = (obj) => {\n\n  const container = {\n    element: obj.container?.element || 'section',\n    className: assignClassName(obj.container?.className), \n  }\n\n  const heading = {\n    element: obj.heading?.element || 'h2',\n    className: assignClassName(obj.heading?.className), \n    content: obj.heading?.content || false,\n  }\n\n  const html = [];\n\n  html.push(`<${container.element} ${container.className}>`);\n  if(heading.content){\n    html.push(`<${heading.element} ${heading.className}>${heading.content}</${heading.element}>`);\n  }\n  if(obj.entries){\n    obj.entries.forEach((entry) => {\n      switch(entry.type){\n        case 'text': html.push(generateTextEntry(entry));\n      }\n    });\n  }\n  html.push(`</${container.element}>`);\n\n  return assembleHTML(html);\n}\n\nexport const generateTextEntry = (obj) => {\n\n  const container = {\n    element: obj.element || 'p',\n    className: assignClassName(obj.attributes?.className), \n  }\n\n  const html = [];\n\n  if(obj.heading && obj.heading.content) {\n    const heading = {\n      element: obj.heading?.element || 'h2',\n      className: assignClassName(obj.heading?.className), \n      content: obj.heading?.content || false,\n    }\n\n    html.push(`<${heading.element} ${heading.className}>${heading.content}</${heading.element}>`);\n  }\n\n  if((appData.pages.current.template === 'collection') || (appData.pages.current.template === 'home')){\n    const carCount = appData.pages.current.id ==='home' ? appData.cars.overview.all : appData.cars.overview[appData.pages.current.id];\n    html.push(`<${container.element} ${container.className}>${obj.content.replace('<strong id=\\\"countCollection\\\"></strong>',`<strong id=\\\"countCollection\\\">${carCount}</strong>`)}</${container.element}>`);\n  }else{\n    html.push(`<${container.element} ${container.className}>${obj.content}</${container.element}>`);\n  }\n\n  return assembleHTML(html);\n};\n\nexport const generateListEntry = (obj) => {\n\n  const container = {\n    element: obj.container?.element || 'section',\n    className: assignClassName(obj.container?.className), \n  }\n  const heading = {\n    element: obj.heading?.element || 'h3',\n    className: assignClassName(obj.heading?.className), \n    content: obj.heading?.content || false,\n  }\n\n  const list = {\n    element: obj.element,\n    className: assignClassName(obj.attributes?.className), \n  }\n\n  const html = [];\n  html.push(`<${container.element} ${container.className}>`);\n  if(heading.content){\n    html.push(`<${heading.element} ${heading.className}>${heading.content}</${heading.element}>`);\n  }\n\n  html.push(`<${list.element} ${list.className}>`);\n  obj.content.forEach((entry) => {\n    html.push(`<li>${entry}</li>`);\n  });\n  html.push(`</${list.element}>`);\n\n  html.push(`</${container.element}>`);\n  return assembleHTML(html);\n}", "/**\n * home.js\n * \n * This module provides the template for the homepage of the `tinyfords-v2` application.\n * The homepage showcases a welcome message, a total count of Ford die-cast cars, \n * and a grid of the latest additions to the collection.\n */\n\n// Importing required modules and utilities.\nimport { appData } from '../services/appData';\nimport { assembleHTML, assignClassName } from '../utils/helpersRenders';\nimport { createIntroTemplate } from '../fragments/fragmentCreators';\nimport fragmentSearchBar from '../fragments/searchBar';\nimport fragmentGridCars from '../fragments/gridCars';\n\n/**\n * Generate the HTML content for the homepage.\n * \n * @param {Object} data - All the pages and cars data\n * @returns {string} - The constructed homepage as an HTML string.\n */\nconst templateHome = (data = appData.pages.current) => {\n  const html = ['<main>'];\n\n  const container = {\n    element: data.content.container?.element || 'section',\n    className: assignClassName(data.content.container?.className), \n  }\n\n  html.push(`<${container.element} ${container.className}>`);\n  html.push(`<h1>${data.h1}</h1>`);\n\n  if(data.content.intro){\n    html.push(createIntroTemplate(data.content.intro));\n  }\n\n  html.push(fragmentSearchBar('/all'));\n\n  html.push(`</${container.element}>`);\n  html.push(fragmentGridCars({heading:{element: 'h2', content: 'Results'}, data: appData.cars.current}));\n\n  html.push('</main>');\n  return assembleHTML(html);\n}\nexport default templateHome;", "/**\n * paginationControls.js\n * \n * This module provides a function to create the pagination controls.\n */\n\n/**\n * Wrapper for the pagination controls, showing links to all pages.\n * \n * @param {object} data - pagination data object\n * @returns {string} - The pagination controls in HTML as string\n */\nconst fragmentPaginationControls = (data) => {\n  const html = `\n  <nav aria-label=\"Pagination\" class=\"fragmentPaginationControls\">\n    <ul>\n      ${constructPrevButton(data)}\n      ${constructPaginationLinks(data)}\n      ${constructNextButton(data)}\n    </ul>\n  </nav>`;\n\n  return html;\n}\nexport default fragmentPaginationControls;\n\n/**\n * Returns the URL for the given page number.\n * \n * @param {number} pageNumber - The target page number.\n * @param {string} slug - The base slug.\n * @returns {string} - The URL for the given page number.\n */\nconst getPageUrl = (page, slug) => {\n  return page === 1 ? slug : `${slug}?page=${page}`;\n};\n\nconst constructPrevButton = (data) => {\n  const label = '&laquo; Previous page';\n  if (data.page === 1) {\n    return `<li class=\"disabled\" aria-disabled=\"true\"><a href=\"${getPageUrl(data.page, data.slug)}\" aria-label=\"${label}\">${label}</a></li>`;\n  }\n  return `<li><a href=\"${getPageUrl(data.page - 1, data.slug)}\" aria-label=\"${label}\">${label}</a></li>`;\n}\n\nconst constructNextButton = (data) => {\n  const label = 'Next page &raquo;';\n  if (data.page === data.total) {\n    return `<li class=\"disabled\" aria-disabled=\"true\"><a href=\"${getPageUrl(data.page, data.slug)}\" aria-label=\"${label}\">${label}</a></li>`;\n  }\n  return `<li><a href=\"${getPageUrl(data.page + 1, data.slug)}\" aria-label=\"${label}\">${label}</a></li>`;\n}\n\nconst constructPaginationLinks = (data) => {\n\n  const entries = [];\n  for(let i =1; i<=data.total; i++){\n    if(i===data.page){\n      entries.push(\n        `<li class=\"active\" aria-disabled=\"true\"><a aria-current=\"page\" href=\"${getPageUrl(data.page, data.slug)}\">${i}</a></li>`\n      );\n    }else{\n      entries.push(\n        `<li><a href=\"${getPageUrl(i, data.slug)}\">${i}</a></li>`\n      );\n    }\n  }\n  return entries.join('');\n}", "/**\n * collection.js\n * \n * This module provides the template for the collection pages.\n * The collection will depend on the slug and it will display the \n * cars in the carsgrid.\n */\n\n// Importing required modules and utilities.\n\nimport { appData } from '../services/appData';\n\n/**\n * home.js\n * \n * This module provides the template for the homepage of the `tinyfords-v2` application.\n * The homepage showcases a welcome message, a total count of Ford die-cast cars, \n * and a grid of the latest additions to the collection.\n */\n\n// Importing required modules and utilities.\nimport { assembleHTML, assignClassName } from '../utils/helpersRenders';\nimport { createIntroTemplate } from '../fragments/fragmentCreators';\nimport fragmentSearchBar from '../fragments/searchBar';\nimport fragmentGridCars from '../fragments/gridCars';\nimport fragmentPaginationControls from '../fragments/paginationControls';\n\n/**\n * Generate the HTML content for the homepage.\n * \n * @param {Object} data - All the pages and cars data\n * @returns {string} - The constructed homepage as an HTML string.\n */\nconst templateCollection = ({ pagination, cars, pages: { current } } = appData) => {\n\n  const paginatedCars = [... cars.current.slice(pagination.start, pagination.end)];\n\n  const html = ['<main>'];\n\n  const container = {\n    element: current.content.container?.element || 'section',\n    className: assignClassName(current.content.container?.className), \n  }\n\n  html.push(`<${container.element} ${container.className}>`);\n  if(pagination.page>1){\n    html.push(`<h1>${current.h1} <span>- Page: ${pagination.page}</span></h1>`);\n  }else{\n    html.push(`<h1>${current.h1}</h1>`);\n  }\n\n  if(current.content.intro){\n    html.push(createIntroTemplate(current.content.intro));\n  }\n\n  html.push(fragmentSearchBar(current.url.pathname));\n\n  const heading = {\n    element: 'h2',\n    content: appData.search.searchTerm ? 'Search results' : 'Results'\n  }\n\n  html.push(`</${container.element}>`);\n\n  html.push(fragmentGridCars({heading: heading, data: paginatedCars}));\n\n  \n\n  if(pagination.total > 1){\n    html.push(fragmentPaginationControls(pagination));\n  }\n\n  html.push('</main>');\n  return assembleHTML(html);\n}\nexport default templateCollection;", "import { generateTextEntry, generateListEntry } from './fragmentCreators';\nimport { assembleHTML, assignClassName } from '../utils/helpersRenders';\n\nexport const generateAsideImageSection = (section) => {\n  const container = {\n    element: section.container?.element || 'div',\n    className: assignClassName(section.container?.attributes?.className), \n  };\n  \n  const image = {\n    element: section.image?.element || 'picture',\n    className: assignClassName(section.image?.attributes?.className), \n    sources: section.image?.images || {},\n  };\n  \n  const childrenWrapper = {\n    element: section.children?.wrapper?.element || 'div',\n    className: section.children?.wrapper?.attributes?.className || '',\n  };\n  \n  let html = [];\n  html.push(`<${container.element} ${container.className}>`);\n  html.push(`<${image.element} ${image.className}>`);\n  html.push(`<source srcset=\"${image.sources.desktop}\" media=\"(min-width: 500px)\">`);\n  html.push(`<source srcset=\"${image.sources.mobile}\" media=\"(min-width: 0px)\">`);\n\n  html.push(`<img src=\"${image.sources.mobile}\" alt=\"\" width=\"16\" height=\"9\">`);\n  html.push(`</${image.element}>`);\n  html.push(`<${childrenWrapper.element} class=\"${childrenWrapper.className}\">`);\n  \n  if (section.children?.entries) {\n    section.children.entries.forEach(entry => {\n      if (entry.type === 'text') {\n        html.push(generateTextEntry(entry));\n      } else if (entry.type === 'list') {\n        html.push(generateListEntry(entry));\n      }\n    });\n  }\n  \n  html.push(`</${childrenWrapper.element}>`);\n  html.push(`</${container.element}>`);\n  \n  return assembleHTML(html);\n}\n\nexport const generateTwoColumnWithImagesSection = (obj) => {\n  const container = {\n    element: obj.container?.element || 'section',\n    className: assignClassName(obj.container?.attributes?.className), \n  }\n\n  const wrapper = {\n    element: obj.wrapper?.element || 'div',\n    className: assignClassName(obj.wrapper?.attributes?.className), \n  }\n\n  const html = [];\n\n  const introHeading = {\n    element: obj.intro.heading?.element || 'h3',\n    className: assignClassName(obj.intro?.heading?.className), \n    content: obj.intro.heading.content || false,\n  }\n  \n  html.push(`<${container.element} ${container.className}>`);\n  if(introHeading.content){\n    html.push(`<${introHeading.element} ${introHeading.className}>${introHeading.content}</${introHeading.element}>`);\n  }\n  html.push(generateTextEntry(obj.intro));\n  html.push(`<${wrapper.element} ${wrapper.className}>`);\n  \n\n  // Image Column\n  const imgSrc = obj.imageColumn?.image?.src || '';\n  const imgAlt = obj.imageColumn?.image?.alt || '';\n  html.push(`<img src=\"${imgSrc}\" alt=\"${imgAlt}\" width=\"1\" height=\"1\">`);\n  html.push('<div>');\n\n  // Content Column\n  if (obj.contentColumn?.entries && Array.isArray(obj.contentColumn.entries)) {\n    obj.contentColumn.entries.forEach(entry => {\n      switch (entry.type) {\n        case 'text':\n          html.push(generateTextEntry(entry));\n          break;\n        case 'list':\n          html.push(generateListEntry(entry));\n          break;\n        // Add cases for other entry types as needed\n      }\n    });\n  }\n  html.push('</div>');\n  html.push(`</${wrapper.element}>`);\n  html.push(`</${container.element}>`);\n  return assembleHTML(html);\n}", "/**\n * content.js\n * \n * This module provides the template for content pages.\n * Each content page may have different structure and information,\n * which are stored within /data/contentPages.js.\n */\n\nimport { appData } from '../services/appData';\nimport { assembleHTML, assignClassName } from '../utils/helpersRenders';\nimport { createIntroTemplate } from '../fragments/fragmentCreators';\nimport { generateAsideImageSection, generateTwoColumnWithImagesSection } from '../fragments/fragmentContentCreators';\n\n /**\n * Generate the HTML content for the collection page.\n * \n * @param {Object} data - All the data (all pages & cars)\n * @returns {string} - The constructed template as an HTML string.\n */\n const templateContent = (data = appData.pages.current) => {\n\n  const html = ['<main>'];\n\n  const container = {\n    element: data.content.container?.element || 'section',\n    className: assignClassName(data.content.container?.className), \n  }\n\n  html.push(`<${container.element} ${container.className}>`);\n  html.push(`<h1>${data.h1}</h1>`);\n  html.push(`<div class=\"contentLongFormContainer\">`);\n\n\n  if(data.content.intro){\n    html.push(createIntroTemplate(data.content.intro));\n  }\n\n  if(data.content.sections){\n    data.content.sections.forEach(section => {\n      switch (section.type){\n        case 'asideImage': html.push(generateAsideImageSection(section));break;\n        case 'twoColumnWithImages': html.push(generateTwoColumnWithImagesSection(section));break;\n      }\n    });\n  }\n\n  html.push('</div>');\n\n  // return generateHTMLFromSections(mergedObj);\n\n  html.push(`</${container.element}>`);\n  html.push(`</main>`);\n\n  return assembleHTML(html);\n};\n\nexport default templateContent;", "/**\n * template.js\n * \n * This module is responsible for constructing a complete web page using various templates and components.\n * It determines the correct template to use based on the requested URL and then assembles the page \n * by stitching together the appropriate components. This module ensures that each page has a consistent \n * structure while displaying different content based on the URL.\n */\n\n// Import necessary modules and templates\nimport { appData } from '../services/appData';\n\n\nimport documentHead from '../construction/documentHead';\nimport documentEnd from '../construction/documentEnd';\nimport pageHead from '../construction/pageHead';\nimport pageBreadcrumbs from '../construction/pageBreadcrumbs';\nimport pageFooter from '../construction/pageFooter';\n\nimport templateHome from '../templates/home';\nimport templateCollection from '../templates/collection';\nimport templateContent from '../templates/content';\n// import handlerError from './error';\n\n/**\n * Main handler for templates. Determines which template to use based on the URL.\n * \n * @param {URL} url - The URL of the request.\n * @returns {Response} - The constructed page as a response.\n */\nconst handleTemplate = async () => {\n  try{\n\n    const content = createPage();\n\n    headers = {\n      'Content-Type': 'text/html'\n    }\n    if (appData.options.noindex) {\n      headers['x-robots-tag'] = 'noindex';\n    }\n\n    return new Response(\n      content,\n      {\n        status:200,\n        headers: headers,\n      }\n    );\n\n\n  }catch(error){\n    console.log('[Error]Handle template : ',error);\n  }\n}\nexport default handleTemplate;\n\n\n/**\n * Construct the full page using various templates and components.\n * \n * @param {Object} dataPageCurrent - The data for the current page.\n * @param {Array} dataPageAll - The list of all page data objects.\n * @returns {string} - The constructed page as an HTML string.\n */\nconst createPage = () => {\n  // return 'hello world from createPage';\n\n  const templates = {\n    home: templateHome,\n    collection: templateCollection,\n    content: templateContent,\n  }\n\n  const sections = [\n    documentHead(),\n\n    pageHead(),\n\n    pageBreadcrumbs(),\n\n    templates[appData.pages.current.template](),\n\n    pageFooter(),\n\n    documentEnd(),\n  ].join('');\n\n  return sections;\n\n}", "/**\n * request.js\n *\n */\n\nimport handleError from './error';\nimport handleStatic from './static';\nimport handleTemplate from './template';\n\nimport {initAppData, appData} from '../services/appData';\n\nconst handleRequest = async (request) => {\n  const url = new URL(request.url);\n  url.searchParams = new URLSearchParams(url.search);\n\n    // Check if the path starts with '/images/' or '/fonts/' to handle static assets.\n    if((url.pathname.startsWith('/images/')) || (url.pathname.startsWith('/fonts/')) || (url.pathname.startsWith('/api/'))){\n      return handleStatic(url);\n    }\n\n    switch (url.pathname) {\n      case '/robots.txt':\n      case '/manifest.json':\n      case '/sitemap.xml':\n      case '/favicon.ico':\n      case '/service-worker.js':\n        return handleStatic(url);\n    }\n\n  switch(request.method){\n    \n    case 'GET': return handleRequestHelperGet(request, url);\n    case 'POST': return handleRequestHelperPost(request, url);\n  }\n\n  return new Response('hi');\n};\nexport default handleRequest;\n\nconst handleRequestHelperGet = async (request, url) => {\n  switch(url.pathname){\n    case '/hotwheels':\n    case '/matchbox':\n    case '/other':\n    case '/all':\n    case '/duplicates':\n      if(url.searchParams.get('page')==='1'){\n        url.searchParams.delete('page');\n        return new Response(null, {status: 308, headers: { Location: url}});\n      }\n\n      if(!url.searchParams.get('page')){\n        url.searchParams.set('page', 1);\n      }\n\n      if(appData.search){\n        appData.search.searchTerm = null;\n      }\n\n      await initAppData(url);\n      handleSearchTerm(url);\n\n      return handleTemplate();\n  }\n  await initAppData(url);\n  return handleTemplate();\n}\n\n\nconst handleRequestHelperPost = async (request, url) => {\n  switch(url.pathname){\n    case '/hotwheels':\n    case '/matchbox':\n    case '/other':\n    case '/all':\n    case '/duplicates':\n      url.searchParams.set('page', 1);\n\n      url.searchParams.set('q', await extractQuery(request));\n\n      await initAppData(url);\n\n      handleSearchTerm(url);\n      return handleTemplate();\n  }\n  return new Response('[Error] 404 - request.js');\n}\n\nconst extractQuery = async (request) => {\n  const formObject = await request.formData();\n  return formObject.get('q');\n}\n\nconst handleSearchTerm = async (url) => {\n  const searchTerm = url.searchParams.get('q');\n  if (searchTerm) {\n    appData.search.searchTerm = searchTerm;\n    const additionalContent = {\n      type: 'text',\n      element: 'p',\n      attributes:{\n        className: 'searchText',\n      },\n      content: `You have searched for <em>'${searchTerm}'</em>. There ${appData.cars.current.length===1 ? `is` : `are`} <strong>${appData.cars.current.length}</strong> result${appData.cars.current.length===1 ? `` : `s`}.`\n    };\n    appData.pages.current.content.intro.entries.push(additionalContent);\n  }\n}", "/**\n * index.js\n * \n * This module serves as the main entry point for handling all incoming requests.\n * It routes requests based on their URL path, delegating to specific handlers for processing.\n * The module can handle both static assets like images and fonts, as well as dynamic routes \n * for rendering templates. If a request doesn't match any predefined route, an error response is returned.\n */\n\n// Importing necessary modules\nimport indexAdmin from './admin/indexAdmin';\nimport handleRequest from './lib/handlers/request';\n\n// Adding an event listener to listen for 'fetch' events. This event is triggered for every HTTP request coming to the service.\naddEventListener('fetch', event => {\n  const url = new URL(event.request.url);\n  \n  // Checking if the request URL starts with '/admin' and routing it to the admin handler.\n  if (url.pathname.startsWith('/admin')) {\n    event.respondWith(indexAdmin(event.request));\n  } else {\n    // For other paths, it uses the handleRequest function.\n    event.respondWith(handleRequest(event.request));\n  }\n});"],
  "mappings": "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",
  "names": ["init", "url", "init", "response", "ctx", "content", "content", "url", "response", "url", "url", "generateOptions", "addedDetail", "generateOptions", "addedDetail", "url", "content", "apiKey", "REPO_OWNER", "REPO_NAME", "FILE_PATH", "response", "response", "carAdd_default", "carSearch_default", "response", "carEdit_default", "response", "url", "carAdd_default", "carSearch_default", "carEdit_default", "url", "content", "url", "urls", "url", "content", "url", "url", "headers", "createTable", "url", "response", "headers", "documentHead", "documentHead_default", "documentEnd", "documentEnd_default", "url", "pageHead", "pageHead_default", "pageBreadcrumbs", "pageBreadcrumbs_default", "content", "pageFooter", "createLinks", "pageFooter_default", "home_default", "content_default", "content", "createPage", "template_default", "home_default", "content_default", "documentHead_default", "pageHead_default", "pageBreadcrumbs_default", "pageFooter_default", "documentEnd_default", "url", "template_default", "url"]
}
